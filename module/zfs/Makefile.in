# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(dist_noinst_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/config/Rules.am compile
bin_PROGRAMS = zfs.kext$(EXEEXT)
noinst_PROGRAMS = zfs$(EXEEXT)
subdir = module/zfs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/always-no-unused-but-set-variable.m4 \
	$(top_srcdir)/config/kernel.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/user-arch.m4 \
	$(top_srcdir)/config/user-dracut.m4 \
	$(top_srcdir)/config/user-frame-larger-than.m4 \
	$(top_srcdir)/config/user-ioctl.m4 \
	$(top_srcdir)/config/user-libblkid.m4 \
	$(top_srcdir)/config/user-libuuid.m4 \
	$(top_srcdir)/config/user-selinux.m4 \
	$(top_srcdir)/config/user-udev.m4 \
	$(top_srcdir)/config/user-zlib.m4 $(top_srcdir)/config/user.m4 \
	$(top_srcdir)/config/zfs-build.m4 \
	$(top_srcdir)/config/zfs-meta.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/zfs_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_zfs_OBJECTS = zfs-arc.$(OBJEXT) zfs-bplist.$(OBJEXT) \
	zfs-bpobj.$(OBJEXT) zfs-bptree.$(OBJEXT) zfs-dbuf.$(OBJEXT) \
	zfs-ddt.$(OBJEXT) zfs-ddt_zap.$(OBJEXT) zfs-dmu.$(OBJEXT) \
	zfs-dmu_diff.$(OBJEXT) zfs-dmu_object.$(OBJEXT) \
	zfs-dmu_objset.$(OBJEXT) zfs-dmu_send.$(OBJEXT) \
	zfs-dmu_traverse.$(OBJEXT) zfs-dmu_tx.$(OBJEXT) \
	zfs-dmu_zfetch.$(OBJEXT) zfs-dnode.$(OBJEXT) \
	zfs-dnode_sync.$(OBJEXT) zfs-dsl_dataset.$(OBJEXT) \
	zfs-dsl_deadlist.$(OBJEXT) zfs-dsl_deleg.$(OBJEXT) \
	zfs-dsl_dir.$(OBJEXT) zfs-dsl_pool.$(OBJEXT) \
	zfs-dsl_prop.$(OBJEXT) zfs-dsl_scan.$(OBJEXT) \
	zfs-dsl_synctask.$(OBJEXT) zfs-fm.$(OBJEXT) zfs-gzip.$(OBJEXT) \
	zfs-lzjb.$(OBJEXT) zfs-lz4.$(OBJEXT) zfs-metaslab.$(OBJEXT) \
	zfs-refcount.$(OBJEXT) zfs-rrwlock.$(OBJEXT) zfs-sa.$(OBJEXT) \
	zfs-sha256.$(OBJEXT) zfs-spa.$(OBJEXT) zfs-spa_boot.$(OBJEXT) \
	zfs-spa_config.$(OBJEXT) zfs-spa_errlog.$(OBJEXT) \
	zfs-spa_history.$(OBJEXT) zfs-spa_misc.$(OBJEXT) \
	zfs-space_map.$(OBJEXT) zfs-txg.$(OBJEXT) \
	zfs-uberblock.$(OBJEXT) zfs-unique.$(OBJEXT) \
	zfs-vdev.$(OBJEXT) zfs-vdev_cache.$(OBJEXT) \
	zfs-vdev_disk.$(OBJEXT) zfs-vdev_file.$(OBJEXT) \
	zfs-vdev_label.$(OBJEXT) zfs-vdev_mirror.$(OBJEXT) \
	zfs-vdev_missing.$(OBJEXT) zfs-vdev_queue.$(OBJEXT) \
	zfs-vdev_raidz.$(OBJEXT) zfs-vdev_root.$(OBJEXT) \
	zfs-zap.$(OBJEXT) zfs-zap_leaf.$(OBJEXT) \
	zfs-zap_micro.$(OBJEXT) zfs-zfeature.$(OBJEXT) \
	zfs-zfeature_common.$(OBJEXT) zfs-zfs_acl.$(OBJEXT) \
	zfs-zfs_byteswap.$(OBJEXT) zfs-zfs_ctldir.$(OBJEXT) \
	zfs-zfs_debug.$(OBJEXT) zfs-zfs_dir.$(OBJEXT) \
	zfs-zfs_fm.$(OBJEXT) zfs-zfs_fuid.$(OBJEXT) \
	zfs-zfs_ioctl.$(OBJEXT) zfs-zfs_log.$(OBJEXT) \
	zfs-zfs_onexit.$(OBJEXT) zfs-zfs_osx.$(OBJEXT) \
	zfs-zfs_replay.$(OBJEXT) zfs-zfs_rlock.$(OBJEXT) \
	zfs-zfs_sa.$(OBJEXT) zfs-zfs_vfsops.$(OBJEXT) \
	zfs-zfs_vnops.$(OBJEXT) zfs-zfs_vnops_osx.$(OBJEXT) \
	zfs-zfs_vnops_osx_lib.$(OBJEXT) zfs-zfs_znode.$(OBJEXT) \
	zfs-zil.$(OBJEXT) zfs-zio.$(OBJEXT) zfs-zio_checksum.$(OBJEXT) \
	zfs-zio_compress.$(OBJEXT) zfs-zio_inject.$(OBJEXT) \
	zfs-zle.$(OBJEXT) zfs-zrlock.$(OBJEXT) zfs-zvol.$(OBJEXT) \
	zfs-zvolIO.$(OBJEXT) zfs-avl.$(OBJEXT) zfs-fnvpair.$(OBJEXT) \
	zfs-nvpair.$(OBJEXT) zfs-nvpair_alloc_fixed.$(OBJEXT) \
	zfs-nvpair_alloc_spl.$(OBJEXT) zfs-u8_textprep.$(OBJEXT) \
	zfs-uconv.$(OBJEXT) zfs-zfs_comutil.$(OBJEXT) \
	zfs-zfs_deleg.$(OBJEXT) zfs-zfs_fletcher.$(OBJEXT) \
	zfs-zfs_namecheck.$(OBJEXT) zfs-zfs_prop.$(OBJEXT) \
	zfs-zpool_prop.$(OBJEXT) zfs-zprop_common.$(OBJEXT)
zfs_OBJECTS = $(am_zfs_OBJECTS)
zfs_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
zfs_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(zfs_CXXFLAGS) \
	$(CXXFLAGS) $(zfs_LDFLAGS) $(LDFLAGS) -o $@
zfs_kext_SOURCES = zfs.c
zfs_kext_OBJECTS = zfs.$(OBJEXT)
zfs_kext_LDADD = $(LDADD)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(zfs_SOURCES) zfs.c
DIST_SOURCES = $(zfs_SOURCES) zfs.c
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(dist_noinst_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
ALIEN = @ALIEN@
ALIEN_VERSION = @ALIEN_VERSION@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEBUG_CFLAGS = @DEBUG_CFLAGS@
DEBUG_DMU_TX = @DEBUG_DMU_TX@
DEBUG_STACKFLAGS = @DEBUG_STACKFLAGS@
DEBUG_ZFS = @DEBUG_ZFS@
DEFAULT_INIT_DIR = @DEFAULT_INIT_DIR@
DEFAULT_INIT_SCRIPT = @DEFAULT_INIT_SCRIPT@
DEFAULT_PACKAGE = @DEFAULT_PACKAGE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DPKG = @DPKG@
DPKGBUILD = @DPKGBUILD@
DPKGBUILD_VERSION = @DPKGBUILD_VERSION@
DPKG_VERSION = @DPKG_VERSION@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FRAME_LARGER_THAN = @FRAME_LARGER_THAN@
GREP = @GREP@
HAVE_ALIEN = @HAVE_ALIEN@
HAVE_DPKG = @HAVE_DPKG@
HAVE_DPKGBUILD = @HAVE_DPKGBUILD@
HAVE_RPM = @HAVE_RPM@
HAVE_RPMBUILD = @HAVE_RPMBUILD@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KERNELCPPFLAGS = @KERNELCPPFLAGS@
KERNELMAKE_PARAMS = @KERNELMAKE_PARAMS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBBLKID = @LIBBLKID@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSELINUX = @LIBSELINUX@
LIBTOOL = @LIBTOOL@
LINUX = @LINUX@
LINUX_OBJ = @LINUX_OBJ@
LINUX_SYMBOLS = @LINUX_SYMBOLS@
LINUX_VERSION = @LINUX_VERSION@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NO_UNUSED_BUT_SET_VARIABLE = @NO_UNUSED_BUT_SET_VARIABLE@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RELEASE = @RELEASE@
RPM = @RPM@
RPMBUILD = @RPMBUILD@
RPMBUILD_VERSION = @RPMBUILD_VERSION@
RPM_DEFINE_COMMON = @RPM_DEFINE_COMMON@
RPM_DEFINE_DKMS = @RPM_DEFINE_DKMS@
RPM_DEFINE_KMOD = @RPM_DEFINE_KMOD@
RPM_DEFINE_UTIL = @RPM_DEFINE_UTIL@
RPM_SPEC_DIR = @RPM_SPEC_DIR@
RPM_VERSION = @RPM_VERSION@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPL = @SPL@
SPL_OBJ = @SPL_OBJ@
SPL_SYMBOLS = @SPL_SYMBOLS@
SPL_VERSION = @SPL_VERSION@
SRPM_DEFINE_COMMON = @SRPM_DEFINE_COMMON@
SRPM_DEFINE_DKMS = @SRPM_DEFINE_DKMS@
SRPM_DEFINE_KMOD = @SRPM_DEFINE_KMOD@
SRPM_DEFINE_UTIL = @SRPM_DEFINE_UTIL@
STRIP = @STRIP@
TARGET_ASM_DIR = @TARGET_ASM_DIR@
VENDOR = @VENDOR@
VERSION = @VERSION@
ZFS_CONFIG = @ZFS_CONFIG@
ZFS_META_ALIAS = @ZFS_META_ALIAS@
ZFS_META_AUTHOR = @ZFS_META_AUTHOR@
ZFS_META_DATA = @ZFS_META_DATA@
ZFS_META_LICENSE = @ZFS_META_LICENSE@
ZFS_META_LT_AGE = @ZFS_META_LT_AGE@
ZFS_META_LT_CURRENT = @ZFS_META_LT_CURRENT@
ZFS_META_LT_REVISION = @ZFS_META_LT_REVISION@
ZFS_META_NAME = @ZFS_META_NAME@
ZFS_META_RELEASE = @ZFS_META_RELEASE@
ZFS_META_VERSION = @ZFS_META_VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dracutdir = @dracutdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
udevdir = @udevdir@
udevruledir = @udevruledir@
DEFAULT_INCLUDES = -include ${top_builddir}/zfs_config.h
AM_LIBTOOLFLAGS = --silent
AM_CFLAGS = -Wall -Wstrict-prototypes -fno-strict-aliasing \
	${NO_UNUSED_BUT_SET_VARIABLE} ${DEBUG_CFLAGS} -D_GNU_SOURCE \
	-D__EXTENSIONS__ -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS \
	-D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE \
	-DTEXT_DOMAIN=\"zfs-osx-user\"
INFO_PLIST = Info.plist
PLIST_STRING = InfoPlist.strings
SUBDIRS = KernelExports
ZFS_DEBUG_STR = @ZFS_DEBUG_STR@

# XXX Make this usable for the installed location too
SPL_KMODDIR = @SPL@/module/spl/spl.kext
CFLAGS_KMOD = \
	$(AM_CFLAGS) \
	-Wall \
	-nostdinc \
	-mkernel \
	-fno-builtin-printf \
	-D_KERNEL \
	-DKERNEL \
	-DKERNEL_PRIVATE \
	-DDRIVER_PRIVATE \
	-DAPPLE \
	-DNeXT \
	-DNAMEDSTREAMS=1 \
	-DHAVE_SPL=1 \
	-DZFS_META_VERSION=\"@ZFS_META_VERSION@\" \
	-DZFS_META_RELEASE=\"@ZFS_META_RELEASE@\" \
	-I$(top_srcdir)/include \
	-I@SPL_OBJ@ -I@SPL_OBJ@/include \
	-I/System/Library/Frameworks/Kernel.framework/Headers \
	-I/System/Library/Frameworks/Kernel.framework/PrivateHeaders

LINKFLAGS_KMOD = \
	-Xlinker \
	-kext \
	-nostdlib \
	-lkmodc++ \
	-lkmod \
	-lcpp_kext \
	-lcc_kext

zfs_kext_SOURCE = 
zfs_SOURCES = \
	arc.c \
	bplist.c \
	bpobj.c \
	bptree.c \
	dbuf.c \
	ddt.c \
	ddt_zap.c \
	dmu.c \
	dmu_diff.c \
	dmu_object.c \
	dmu_objset.c \
	dmu_send.c \
	dmu_traverse.c \
	dmu_tx.c \
	dmu_zfetch.c \
	dnode.c \
	dnode_sync.c \
	dsl_dataset.c \
	dsl_deadlist.c \
	dsl_deleg.c \
	dsl_dir.c \
	dsl_pool.c \
	dsl_prop.c \
	dsl_scan.c \
	dsl_synctask.c \
	fm.c \
	gzip.c \
	lzjb.c \
	lz4.c \
	metaslab.c \
	refcount.c \
	rrwlock.c \
	sa.c \
	sha256.c \
	spa.c \
	spa_boot.c \
	spa_config.c \
	spa_errlog.c \
	spa_history.c \
	spa_misc.c \
	space_map.c \
	txg.c \
	uberblock.c \
	unique.c \
	vdev.c \
	vdev_cache.c \
	vdev_disk.c \
	vdev_file.c \
	vdev_label.c \
	vdev_mirror.c \
	vdev_missing.c \
	vdev_queue.c \
	vdev_raidz.c \
	vdev_root.c \
	zap.c \
	zap_leaf.c \
	zap_micro.c \
	zfeature.c \
	zfeature_common.c \
	zfs_acl.c \
	zfs_byteswap.c \
	zfs_ctldir.c \
	zfs_debug.c \
	zfs_dir.c \
	zfs_fm.c \
	zfs_fuid.c \
	zfs_ioctl.c \
	zfs_log.c \
	zfs_onexit.c \
	zfs_osx.cpp \
	zfs_replay.c \
	zfs_rlock.c \
	zfs_sa.c \
	zfs_vfsops.c \
	zfs_vnops.c \
	zfs_vnops_osx.c \
	zfs_vnops_osx_lib.c \
	zfs_znode.c \
	zil.c \
	zio.c \
	zio_checksum.c \
	zio_compress.c \
	zio_inject.c \
	zle.c \
	zrlock.c \
	zvol.c \
	zvolIO.cpp \
	../avl/avl.c \
	../nvpair/fnvpair.c \
	../nvpair/nvpair.c \
	../nvpair/nvpair_alloc_fixed.c \
	../nvpair/nvpair_alloc_spl.c \
	../unicode/u8_textprep.c \
	../unicode/uconv.c \
	../zcommon/zfs_comutil.c \
	../zcommon/zfs_deleg.c \
	../zcommon/zfs_fletcher.c \
	../zcommon/zfs_namecheck.c \
	../zcommon/zfs_prop.c \
	../zcommon/zpool_prop.c \
	../zcommon/zprop_common.c

zfs_CPPFLAGS = $(CFLAGS_KMOD)
zfs_CXXFLAGS = $(CFLAGS_KMOD)
zfs_LDFLAGS = $(LINKFLAGS_KMOD)
dist_noinst_DATA = $(PLIST_STRING) $(INFO_PLIST)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/config/Rules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu module/zfs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu module/zfs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Rules.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
zfs$(EXEEXT): $(zfs_OBJECTS) $(zfs_DEPENDENCIES) $(EXTRA_zfs_DEPENDENCIES) 
	@rm -f zfs$(EXEEXT)
	$(AM_V_CXXLD)$(zfs_LINK) $(zfs_OBJECTS) $(zfs_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-arc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-avl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-bplist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-bpobj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-bptree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dbuf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-ddt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-ddt_zap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_diff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_objset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_send.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_traverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_tx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dmu_zfetch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dnode_sync.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_dataset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_deadlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_deleg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_pool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_prop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_scan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-dsl_synctask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-fm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-fnvpair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-gzip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-lz4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-lzjb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-metaslab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-nvpair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-nvpair_alloc_fixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-nvpair_alloc_spl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-refcount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-rrwlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-sa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-sha256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa_boot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa_config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa_errlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa_history.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-spa_misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-space_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-txg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-u8_textprep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-uberblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-uconv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-unique.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_disk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_label.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_mirror.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_missing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_raidz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-vdev_root.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zap_leaf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zap_micro.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfeature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfeature_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_acl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_byteswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_comutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_ctldir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_deleg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_fletcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_fm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_fuid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_ioctl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_namecheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_onexit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_osx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_prop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_replay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_rlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_sa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_vfsops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_vnops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_vnops_osx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_vnops_osx_lib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zfs_znode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zio_checksum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zio_compress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zio_inject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zpool_prop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zprop_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zrlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zvol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs-zvolIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zfs.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

zfs-arc.o: arc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-arc.o -MD -MP -MF $(DEPDIR)/zfs-arc.Tpo -c -o zfs-arc.o `test -f 'arc.c' || echo '$(srcdir)/'`arc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-arc.Tpo $(DEPDIR)/zfs-arc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='arc.c' object='zfs-arc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-arc.o `test -f 'arc.c' || echo '$(srcdir)/'`arc.c

zfs-arc.obj: arc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-arc.obj -MD -MP -MF $(DEPDIR)/zfs-arc.Tpo -c -o zfs-arc.obj `if test -f 'arc.c'; then $(CYGPATH_W) 'arc.c'; else $(CYGPATH_W) '$(srcdir)/arc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-arc.Tpo $(DEPDIR)/zfs-arc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='arc.c' object='zfs-arc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-arc.obj `if test -f 'arc.c'; then $(CYGPATH_W) 'arc.c'; else $(CYGPATH_W) '$(srcdir)/arc.c'; fi`

zfs-bplist.o: bplist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bplist.o -MD -MP -MF $(DEPDIR)/zfs-bplist.Tpo -c -o zfs-bplist.o `test -f 'bplist.c' || echo '$(srcdir)/'`bplist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bplist.Tpo $(DEPDIR)/zfs-bplist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bplist.c' object='zfs-bplist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bplist.o `test -f 'bplist.c' || echo '$(srcdir)/'`bplist.c

zfs-bplist.obj: bplist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bplist.obj -MD -MP -MF $(DEPDIR)/zfs-bplist.Tpo -c -o zfs-bplist.obj `if test -f 'bplist.c'; then $(CYGPATH_W) 'bplist.c'; else $(CYGPATH_W) '$(srcdir)/bplist.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bplist.Tpo $(DEPDIR)/zfs-bplist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bplist.c' object='zfs-bplist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bplist.obj `if test -f 'bplist.c'; then $(CYGPATH_W) 'bplist.c'; else $(CYGPATH_W) '$(srcdir)/bplist.c'; fi`

zfs-bpobj.o: bpobj.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bpobj.o -MD -MP -MF $(DEPDIR)/zfs-bpobj.Tpo -c -o zfs-bpobj.o `test -f 'bpobj.c' || echo '$(srcdir)/'`bpobj.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bpobj.Tpo $(DEPDIR)/zfs-bpobj.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bpobj.c' object='zfs-bpobj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bpobj.o `test -f 'bpobj.c' || echo '$(srcdir)/'`bpobj.c

zfs-bpobj.obj: bpobj.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bpobj.obj -MD -MP -MF $(DEPDIR)/zfs-bpobj.Tpo -c -o zfs-bpobj.obj `if test -f 'bpobj.c'; then $(CYGPATH_W) 'bpobj.c'; else $(CYGPATH_W) '$(srcdir)/bpobj.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bpobj.Tpo $(DEPDIR)/zfs-bpobj.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bpobj.c' object='zfs-bpobj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bpobj.obj `if test -f 'bpobj.c'; then $(CYGPATH_W) 'bpobj.c'; else $(CYGPATH_W) '$(srcdir)/bpobj.c'; fi`

zfs-bptree.o: bptree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bptree.o -MD -MP -MF $(DEPDIR)/zfs-bptree.Tpo -c -o zfs-bptree.o `test -f 'bptree.c' || echo '$(srcdir)/'`bptree.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bptree.Tpo $(DEPDIR)/zfs-bptree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bptree.c' object='zfs-bptree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bptree.o `test -f 'bptree.c' || echo '$(srcdir)/'`bptree.c

zfs-bptree.obj: bptree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-bptree.obj -MD -MP -MF $(DEPDIR)/zfs-bptree.Tpo -c -o zfs-bptree.obj `if test -f 'bptree.c'; then $(CYGPATH_W) 'bptree.c'; else $(CYGPATH_W) '$(srcdir)/bptree.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-bptree.Tpo $(DEPDIR)/zfs-bptree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bptree.c' object='zfs-bptree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-bptree.obj `if test -f 'bptree.c'; then $(CYGPATH_W) 'bptree.c'; else $(CYGPATH_W) '$(srcdir)/bptree.c'; fi`

zfs-dbuf.o: dbuf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dbuf.o -MD -MP -MF $(DEPDIR)/zfs-dbuf.Tpo -c -o zfs-dbuf.o `test -f 'dbuf.c' || echo '$(srcdir)/'`dbuf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dbuf.Tpo $(DEPDIR)/zfs-dbuf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dbuf.c' object='zfs-dbuf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dbuf.o `test -f 'dbuf.c' || echo '$(srcdir)/'`dbuf.c

zfs-dbuf.obj: dbuf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dbuf.obj -MD -MP -MF $(DEPDIR)/zfs-dbuf.Tpo -c -o zfs-dbuf.obj `if test -f 'dbuf.c'; then $(CYGPATH_W) 'dbuf.c'; else $(CYGPATH_W) '$(srcdir)/dbuf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dbuf.Tpo $(DEPDIR)/zfs-dbuf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dbuf.c' object='zfs-dbuf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dbuf.obj `if test -f 'dbuf.c'; then $(CYGPATH_W) 'dbuf.c'; else $(CYGPATH_W) '$(srcdir)/dbuf.c'; fi`

zfs-ddt.o: ddt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-ddt.o -MD -MP -MF $(DEPDIR)/zfs-ddt.Tpo -c -o zfs-ddt.o `test -f 'ddt.c' || echo '$(srcdir)/'`ddt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-ddt.Tpo $(DEPDIR)/zfs-ddt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ddt.c' object='zfs-ddt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-ddt.o `test -f 'ddt.c' || echo '$(srcdir)/'`ddt.c

zfs-ddt.obj: ddt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-ddt.obj -MD -MP -MF $(DEPDIR)/zfs-ddt.Tpo -c -o zfs-ddt.obj `if test -f 'ddt.c'; then $(CYGPATH_W) 'ddt.c'; else $(CYGPATH_W) '$(srcdir)/ddt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-ddt.Tpo $(DEPDIR)/zfs-ddt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ddt.c' object='zfs-ddt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-ddt.obj `if test -f 'ddt.c'; then $(CYGPATH_W) 'ddt.c'; else $(CYGPATH_W) '$(srcdir)/ddt.c'; fi`

zfs-ddt_zap.o: ddt_zap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-ddt_zap.o -MD -MP -MF $(DEPDIR)/zfs-ddt_zap.Tpo -c -o zfs-ddt_zap.o `test -f 'ddt_zap.c' || echo '$(srcdir)/'`ddt_zap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-ddt_zap.Tpo $(DEPDIR)/zfs-ddt_zap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ddt_zap.c' object='zfs-ddt_zap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-ddt_zap.o `test -f 'ddt_zap.c' || echo '$(srcdir)/'`ddt_zap.c

zfs-ddt_zap.obj: ddt_zap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-ddt_zap.obj -MD -MP -MF $(DEPDIR)/zfs-ddt_zap.Tpo -c -o zfs-ddt_zap.obj `if test -f 'ddt_zap.c'; then $(CYGPATH_W) 'ddt_zap.c'; else $(CYGPATH_W) '$(srcdir)/ddt_zap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-ddt_zap.Tpo $(DEPDIR)/zfs-ddt_zap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ddt_zap.c' object='zfs-ddt_zap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-ddt_zap.obj `if test -f 'ddt_zap.c'; then $(CYGPATH_W) 'ddt_zap.c'; else $(CYGPATH_W) '$(srcdir)/ddt_zap.c'; fi`

zfs-dmu.o: dmu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu.o -MD -MP -MF $(DEPDIR)/zfs-dmu.Tpo -c -o zfs-dmu.o `test -f 'dmu.c' || echo '$(srcdir)/'`dmu.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu.Tpo $(DEPDIR)/zfs-dmu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu.c' object='zfs-dmu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu.o `test -f 'dmu.c' || echo '$(srcdir)/'`dmu.c

zfs-dmu.obj: dmu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu.obj -MD -MP -MF $(DEPDIR)/zfs-dmu.Tpo -c -o zfs-dmu.obj `if test -f 'dmu.c'; then $(CYGPATH_W) 'dmu.c'; else $(CYGPATH_W) '$(srcdir)/dmu.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu.Tpo $(DEPDIR)/zfs-dmu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu.c' object='zfs-dmu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu.obj `if test -f 'dmu.c'; then $(CYGPATH_W) 'dmu.c'; else $(CYGPATH_W) '$(srcdir)/dmu.c'; fi`

zfs-dmu_diff.o: dmu_diff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_diff.o -MD -MP -MF $(DEPDIR)/zfs-dmu_diff.Tpo -c -o zfs-dmu_diff.o `test -f 'dmu_diff.c' || echo '$(srcdir)/'`dmu_diff.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_diff.Tpo $(DEPDIR)/zfs-dmu_diff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_diff.c' object='zfs-dmu_diff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_diff.o `test -f 'dmu_diff.c' || echo '$(srcdir)/'`dmu_diff.c

zfs-dmu_diff.obj: dmu_diff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_diff.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_diff.Tpo -c -o zfs-dmu_diff.obj `if test -f 'dmu_diff.c'; then $(CYGPATH_W) 'dmu_diff.c'; else $(CYGPATH_W) '$(srcdir)/dmu_diff.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_diff.Tpo $(DEPDIR)/zfs-dmu_diff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_diff.c' object='zfs-dmu_diff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_diff.obj `if test -f 'dmu_diff.c'; then $(CYGPATH_W) 'dmu_diff.c'; else $(CYGPATH_W) '$(srcdir)/dmu_diff.c'; fi`

zfs-dmu_object.o: dmu_object.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_object.o -MD -MP -MF $(DEPDIR)/zfs-dmu_object.Tpo -c -o zfs-dmu_object.o `test -f 'dmu_object.c' || echo '$(srcdir)/'`dmu_object.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_object.Tpo $(DEPDIR)/zfs-dmu_object.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_object.c' object='zfs-dmu_object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_object.o `test -f 'dmu_object.c' || echo '$(srcdir)/'`dmu_object.c

zfs-dmu_object.obj: dmu_object.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_object.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_object.Tpo -c -o zfs-dmu_object.obj `if test -f 'dmu_object.c'; then $(CYGPATH_W) 'dmu_object.c'; else $(CYGPATH_W) '$(srcdir)/dmu_object.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_object.Tpo $(DEPDIR)/zfs-dmu_object.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_object.c' object='zfs-dmu_object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_object.obj `if test -f 'dmu_object.c'; then $(CYGPATH_W) 'dmu_object.c'; else $(CYGPATH_W) '$(srcdir)/dmu_object.c'; fi`

zfs-dmu_objset.o: dmu_objset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_objset.o -MD -MP -MF $(DEPDIR)/zfs-dmu_objset.Tpo -c -o zfs-dmu_objset.o `test -f 'dmu_objset.c' || echo '$(srcdir)/'`dmu_objset.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_objset.Tpo $(DEPDIR)/zfs-dmu_objset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_objset.c' object='zfs-dmu_objset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_objset.o `test -f 'dmu_objset.c' || echo '$(srcdir)/'`dmu_objset.c

zfs-dmu_objset.obj: dmu_objset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_objset.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_objset.Tpo -c -o zfs-dmu_objset.obj `if test -f 'dmu_objset.c'; then $(CYGPATH_W) 'dmu_objset.c'; else $(CYGPATH_W) '$(srcdir)/dmu_objset.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_objset.Tpo $(DEPDIR)/zfs-dmu_objset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_objset.c' object='zfs-dmu_objset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_objset.obj `if test -f 'dmu_objset.c'; then $(CYGPATH_W) 'dmu_objset.c'; else $(CYGPATH_W) '$(srcdir)/dmu_objset.c'; fi`

zfs-dmu_send.o: dmu_send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_send.o -MD -MP -MF $(DEPDIR)/zfs-dmu_send.Tpo -c -o zfs-dmu_send.o `test -f 'dmu_send.c' || echo '$(srcdir)/'`dmu_send.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_send.Tpo $(DEPDIR)/zfs-dmu_send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_send.c' object='zfs-dmu_send.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_send.o `test -f 'dmu_send.c' || echo '$(srcdir)/'`dmu_send.c

zfs-dmu_send.obj: dmu_send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_send.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_send.Tpo -c -o zfs-dmu_send.obj `if test -f 'dmu_send.c'; then $(CYGPATH_W) 'dmu_send.c'; else $(CYGPATH_W) '$(srcdir)/dmu_send.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_send.Tpo $(DEPDIR)/zfs-dmu_send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_send.c' object='zfs-dmu_send.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_send.obj `if test -f 'dmu_send.c'; then $(CYGPATH_W) 'dmu_send.c'; else $(CYGPATH_W) '$(srcdir)/dmu_send.c'; fi`

zfs-dmu_traverse.o: dmu_traverse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_traverse.o -MD -MP -MF $(DEPDIR)/zfs-dmu_traverse.Tpo -c -o zfs-dmu_traverse.o `test -f 'dmu_traverse.c' || echo '$(srcdir)/'`dmu_traverse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_traverse.Tpo $(DEPDIR)/zfs-dmu_traverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_traverse.c' object='zfs-dmu_traverse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_traverse.o `test -f 'dmu_traverse.c' || echo '$(srcdir)/'`dmu_traverse.c

zfs-dmu_traverse.obj: dmu_traverse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_traverse.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_traverse.Tpo -c -o zfs-dmu_traverse.obj `if test -f 'dmu_traverse.c'; then $(CYGPATH_W) 'dmu_traverse.c'; else $(CYGPATH_W) '$(srcdir)/dmu_traverse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_traverse.Tpo $(DEPDIR)/zfs-dmu_traverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_traverse.c' object='zfs-dmu_traverse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_traverse.obj `if test -f 'dmu_traverse.c'; then $(CYGPATH_W) 'dmu_traverse.c'; else $(CYGPATH_W) '$(srcdir)/dmu_traverse.c'; fi`

zfs-dmu_tx.o: dmu_tx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_tx.o -MD -MP -MF $(DEPDIR)/zfs-dmu_tx.Tpo -c -o zfs-dmu_tx.o `test -f 'dmu_tx.c' || echo '$(srcdir)/'`dmu_tx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_tx.Tpo $(DEPDIR)/zfs-dmu_tx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_tx.c' object='zfs-dmu_tx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_tx.o `test -f 'dmu_tx.c' || echo '$(srcdir)/'`dmu_tx.c

zfs-dmu_tx.obj: dmu_tx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_tx.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_tx.Tpo -c -o zfs-dmu_tx.obj `if test -f 'dmu_tx.c'; then $(CYGPATH_W) 'dmu_tx.c'; else $(CYGPATH_W) '$(srcdir)/dmu_tx.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_tx.Tpo $(DEPDIR)/zfs-dmu_tx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_tx.c' object='zfs-dmu_tx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_tx.obj `if test -f 'dmu_tx.c'; then $(CYGPATH_W) 'dmu_tx.c'; else $(CYGPATH_W) '$(srcdir)/dmu_tx.c'; fi`

zfs-dmu_zfetch.o: dmu_zfetch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_zfetch.o -MD -MP -MF $(DEPDIR)/zfs-dmu_zfetch.Tpo -c -o zfs-dmu_zfetch.o `test -f 'dmu_zfetch.c' || echo '$(srcdir)/'`dmu_zfetch.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_zfetch.Tpo $(DEPDIR)/zfs-dmu_zfetch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_zfetch.c' object='zfs-dmu_zfetch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_zfetch.o `test -f 'dmu_zfetch.c' || echo '$(srcdir)/'`dmu_zfetch.c

zfs-dmu_zfetch.obj: dmu_zfetch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dmu_zfetch.obj -MD -MP -MF $(DEPDIR)/zfs-dmu_zfetch.Tpo -c -o zfs-dmu_zfetch.obj `if test -f 'dmu_zfetch.c'; then $(CYGPATH_W) 'dmu_zfetch.c'; else $(CYGPATH_W) '$(srcdir)/dmu_zfetch.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dmu_zfetch.Tpo $(DEPDIR)/zfs-dmu_zfetch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dmu_zfetch.c' object='zfs-dmu_zfetch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dmu_zfetch.obj `if test -f 'dmu_zfetch.c'; then $(CYGPATH_W) 'dmu_zfetch.c'; else $(CYGPATH_W) '$(srcdir)/dmu_zfetch.c'; fi`

zfs-dnode.o: dnode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dnode.o -MD -MP -MF $(DEPDIR)/zfs-dnode.Tpo -c -o zfs-dnode.o `test -f 'dnode.c' || echo '$(srcdir)/'`dnode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dnode.Tpo $(DEPDIR)/zfs-dnode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnode.c' object='zfs-dnode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dnode.o `test -f 'dnode.c' || echo '$(srcdir)/'`dnode.c

zfs-dnode.obj: dnode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dnode.obj -MD -MP -MF $(DEPDIR)/zfs-dnode.Tpo -c -o zfs-dnode.obj `if test -f 'dnode.c'; then $(CYGPATH_W) 'dnode.c'; else $(CYGPATH_W) '$(srcdir)/dnode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dnode.Tpo $(DEPDIR)/zfs-dnode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnode.c' object='zfs-dnode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dnode.obj `if test -f 'dnode.c'; then $(CYGPATH_W) 'dnode.c'; else $(CYGPATH_W) '$(srcdir)/dnode.c'; fi`

zfs-dnode_sync.o: dnode_sync.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dnode_sync.o -MD -MP -MF $(DEPDIR)/zfs-dnode_sync.Tpo -c -o zfs-dnode_sync.o `test -f 'dnode_sync.c' || echo '$(srcdir)/'`dnode_sync.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dnode_sync.Tpo $(DEPDIR)/zfs-dnode_sync.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnode_sync.c' object='zfs-dnode_sync.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dnode_sync.o `test -f 'dnode_sync.c' || echo '$(srcdir)/'`dnode_sync.c

zfs-dnode_sync.obj: dnode_sync.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dnode_sync.obj -MD -MP -MF $(DEPDIR)/zfs-dnode_sync.Tpo -c -o zfs-dnode_sync.obj `if test -f 'dnode_sync.c'; then $(CYGPATH_W) 'dnode_sync.c'; else $(CYGPATH_W) '$(srcdir)/dnode_sync.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dnode_sync.Tpo $(DEPDIR)/zfs-dnode_sync.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnode_sync.c' object='zfs-dnode_sync.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dnode_sync.obj `if test -f 'dnode_sync.c'; then $(CYGPATH_W) 'dnode_sync.c'; else $(CYGPATH_W) '$(srcdir)/dnode_sync.c'; fi`

zfs-dsl_dataset.o: dsl_dataset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_dataset.o -MD -MP -MF $(DEPDIR)/zfs-dsl_dataset.Tpo -c -o zfs-dsl_dataset.o `test -f 'dsl_dataset.c' || echo '$(srcdir)/'`dsl_dataset.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_dataset.Tpo $(DEPDIR)/zfs-dsl_dataset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_dataset.c' object='zfs-dsl_dataset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_dataset.o `test -f 'dsl_dataset.c' || echo '$(srcdir)/'`dsl_dataset.c

zfs-dsl_dataset.obj: dsl_dataset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_dataset.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_dataset.Tpo -c -o zfs-dsl_dataset.obj `if test -f 'dsl_dataset.c'; then $(CYGPATH_W) 'dsl_dataset.c'; else $(CYGPATH_W) '$(srcdir)/dsl_dataset.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_dataset.Tpo $(DEPDIR)/zfs-dsl_dataset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_dataset.c' object='zfs-dsl_dataset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_dataset.obj `if test -f 'dsl_dataset.c'; then $(CYGPATH_W) 'dsl_dataset.c'; else $(CYGPATH_W) '$(srcdir)/dsl_dataset.c'; fi`

zfs-dsl_deadlist.o: dsl_deadlist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_deadlist.o -MD -MP -MF $(DEPDIR)/zfs-dsl_deadlist.Tpo -c -o zfs-dsl_deadlist.o `test -f 'dsl_deadlist.c' || echo '$(srcdir)/'`dsl_deadlist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_deadlist.Tpo $(DEPDIR)/zfs-dsl_deadlist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_deadlist.c' object='zfs-dsl_deadlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_deadlist.o `test -f 'dsl_deadlist.c' || echo '$(srcdir)/'`dsl_deadlist.c

zfs-dsl_deadlist.obj: dsl_deadlist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_deadlist.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_deadlist.Tpo -c -o zfs-dsl_deadlist.obj `if test -f 'dsl_deadlist.c'; then $(CYGPATH_W) 'dsl_deadlist.c'; else $(CYGPATH_W) '$(srcdir)/dsl_deadlist.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_deadlist.Tpo $(DEPDIR)/zfs-dsl_deadlist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_deadlist.c' object='zfs-dsl_deadlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_deadlist.obj `if test -f 'dsl_deadlist.c'; then $(CYGPATH_W) 'dsl_deadlist.c'; else $(CYGPATH_W) '$(srcdir)/dsl_deadlist.c'; fi`

zfs-dsl_deleg.o: dsl_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_deleg.o -MD -MP -MF $(DEPDIR)/zfs-dsl_deleg.Tpo -c -o zfs-dsl_deleg.o `test -f 'dsl_deleg.c' || echo '$(srcdir)/'`dsl_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_deleg.Tpo $(DEPDIR)/zfs-dsl_deleg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_deleg.c' object='zfs-dsl_deleg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_deleg.o `test -f 'dsl_deleg.c' || echo '$(srcdir)/'`dsl_deleg.c

zfs-dsl_deleg.obj: dsl_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_deleg.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_deleg.Tpo -c -o zfs-dsl_deleg.obj `if test -f 'dsl_deleg.c'; then $(CYGPATH_W) 'dsl_deleg.c'; else $(CYGPATH_W) '$(srcdir)/dsl_deleg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_deleg.Tpo $(DEPDIR)/zfs-dsl_deleg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_deleg.c' object='zfs-dsl_deleg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_deleg.obj `if test -f 'dsl_deleg.c'; then $(CYGPATH_W) 'dsl_deleg.c'; else $(CYGPATH_W) '$(srcdir)/dsl_deleg.c'; fi`

zfs-dsl_dir.o: dsl_dir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_dir.o -MD -MP -MF $(DEPDIR)/zfs-dsl_dir.Tpo -c -o zfs-dsl_dir.o `test -f 'dsl_dir.c' || echo '$(srcdir)/'`dsl_dir.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_dir.Tpo $(DEPDIR)/zfs-dsl_dir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_dir.c' object='zfs-dsl_dir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_dir.o `test -f 'dsl_dir.c' || echo '$(srcdir)/'`dsl_dir.c

zfs-dsl_dir.obj: dsl_dir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_dir.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_dir.Tpo -c -o zfs-dsl_dir.obj `if test -f 'dsl_dir.c'; then $(CYGPATH_W) 'dsl_dir.c'; else $(CYGPATH_W) '$(srcdir)/dsl_dir.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_dir.Tpo $(DEPDIR)/zfs-dsl_dir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_dir.c' object='zfs-dsl_dir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_dir.obj `if test -f 'dsl_dir.c'; then $(CYGPATH_W) 'dsl_dir.c'; else $(CYGPATH_W) '$(srcdir)/dsl_dir.c'; fi`

zfs-dsl_pool.o: dsl_pool.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_pool.o -MD -MP -MF $(DEPDIR)/zfs-dsl_pool.Tpo -c -o zfs-dsl_pool.o `test -f 'dsl_pool.c' || echo '$(srcdir)/'`dsl_pool.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_pool.Tpo $(DEPDIR)/zfs-dsl_pool.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_pool.c' object='zfs-dsl_pool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_pool.o `test -f 'dsl_pool.c' || echo '$(srcdir)/'`dsl_pool.c

zfs-dsl_pool.obj: dsl_pool.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_pool.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_pool.Tpo -c -o zfs-dsl_pool.obj `if test -f 'dsl_pool.c'; then $(CYGPATH_W) 'dsl_pool.c'; else $(CYGPATH_W) '$(srcdir)/dsl_pool.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_pool.Tpo $(DEPDIR)/zfs-dsl_pool.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_pool.c' object='zfs-dsl_pool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_pool.obj `if test -f 'dsl_pool.c'; then $(CYGPATH_W) 'dsl_pool.c'; else $(CYGPATH_W) '$(srcdir)/dsl_pool.c'; fi`

zfs-dsl_prop.o: dsl_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_prop.o -MD -MP -MF $(DEPDIR)/zfs-dsl_prop.Tpo -c -o zfs-dsl_prop.o `test -f 'dsl_prop.c' || echo '$(srcdir)/'`dsl_prop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_prop.Tpo $(DEPDIR)/zfs-dsl_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_prop.c' object='zfs-dsl_prop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_prop.o `test -f 'dsl_prop.c' || echo '$(srcdir)/'`dsl_prop.c

zfs-dsl_prop.obj: dsl_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_prop.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_prop.Tpo -c -o zfs-dsl_prop.obj `if test -f 'dsl_prop.c'; then $(CYGPATH_W) 'dsl_prop.c'; else $(CYGPATH_W) '$(srcdir)/dsl_prop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_prop.Tpo $(DEPDIR)/zfs-dsl_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_prop.c' object='zfs-dsl_prop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_prop.obj `if test -f 'dsl_prop.c'; then $(CYGPATH_W) 'dsl_prop.c'; else $(CYGPATH_W) '$(srcdir)/dsl_prop.c'; fi`

zfs-dsl_scan.o: dsl_scan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_scan.o -MD -MP -MF $(DEPDIR)/zfs-dsl_scan.Tpo -c -o zfs-dsl_scan.o `test -f 'dsl_scan.c' || echo '$(srcdir)/'`dsl_scan.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_scan.Tpo $(DEPDIR)/zfs-dsl_scan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_scan.c' object='zfs-dsl_scan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_scan.o `test -f 'dsl_scan.c' || echo '$(srcdir)/'`dsl_scan.c

zfs-dsl_scan.obj: dsl_scan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_scan.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_scan.Tpo -c -o zfs-dsl_scan.obj `if test -f 'dsl_scan.c'; then $(CYGPATH_W) 'dsl_scan.c'; else $(CYGPATH_W) '$(srcdir)/dsl_scan.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_scan.Tpo $(DEPDIR)/zfs-dsl_scan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_scan.c' object='zfs-dsl_scan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_scan.obj `if test -f 'dsl_scan.c'; then $(CYGPATH_W) 'dsl_scan.c'; else $(CYGPATH_W) '$(srcdir)/dsl_scan.c'; fi`

zfs-dsl_synctask.o: dsl_synctask.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_synctask.o -MD -MP -MF $(DEPDIR)/zfs-dsl_synctask.Tpo -c -o zfs-dsl_synctask.o `test -f 'dsl_synctask.c' || echo '$(srcdir)/'`dsl_synctask.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_synctask.Tpo $(DEPDIR)/zfs-dsl_synctask.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_synctask.c' object='zfs-dsl_synctask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_synctask.o `test -f 'dsl_synctask.c' || echo '$(srcdir)/'`dsl_synctask.c

zfs-dsl_synctask.obj: dsl_synctask.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-dsl_synctask.obj -MD -MP -MF $(DEPDIR)/zfs-dsl_synctask.Tpo -c -o zfs-dsl_synctask.obj `if test -f 'dsl_synctask.c'; then $(CYGPATH_W) 'dsl_synctask.c'; else $(CYGPATH_W) '$(srcdir)/dsl_synctask.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-dsl_synctask.Tpo $(DEPDIR)/zfs-dsl_synctask.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dsl_synctask.c' object='zfs-dsl_synctask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-dsl_synctask.obj `if test -f 'dsl_synctask.c'; then $(CYGPATH_W) 'dsl_synctask.c'; else $(CYGPATH_W) '$(srcdir)/dsl_synctask.c'; fi`

zfs-fm.o: fm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-fm.o -MD -MP -MF $(DEPDIR)/zfs-fm.Tpo -c -o zfs-fm.o `test -f 'fm.c' || echo '$(srcdir)/'`fm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-fm.Tpo $(DEPDIR)/zfs-fm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fm.c' object='zfs-fm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-fm.o `test -f 'fm.c' || echo '$(srcdir)/'`fm.c

zfs-fm.obj: fm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-fm.obj -MD -MP -MF $(DEPDIR)/zfs-fm.Tpo -c -o zfs-fm.obj `if test -f 'fm.c'; then $(CYGPATH_W) 'fm.c'; else $(CYGPATH_W) '$(srcdir)/fm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-fm.Tpo $(DEPDIR)/zfs-fm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fm.c' object='zfs-fm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-fm.obj `if test -f 'fm.c'; then $(CYGPATH_W) 'fm.c'; else $(CYGPATH_W) '$(srcdir)/fm.c'; fi`

zfs-gzip.o: gzip.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-gzip.o -MD -MP -MF $(DEPDIR)/zfs-gzip.Tpo -c -o zfs-gzip.o `test -f 'gzip.c' || echo '$(srcdir)/'`gzip.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-gzip.Tpo $(DEPDIR)/zfs-gzip.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gzip.c' object='zfs-gzip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-gzip.o `test -f 'gzip.c' || echo '$(srcdir)/'`gzip.c

zfs-gzip.obj: gzip.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-gzip.obj -MD -MP -MF $(DEPDIR)/zfs-gzip.Tpo -c -o zfs-gzip.obj `if test -f 'gzip.c'; then $(CYGPATH_W) 'gzip.c'; else $(CYGPATH_W) '$(srcdir)/gzip.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-gzip.Tpo $(DEPDIR)/zfs-gzip.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gzip.c' object='zfs-gzip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-gzip.obj `if test -f 'gzip.c'; then $(CYGPATH_W) 'gzip.c'; else $(CYGPATH_W) '$(srcdir)/gzip.c'; fi`

zfs-lzjb.o: lzjb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-lzjb.o -MD -MP -MF $(DEPDIR)/zfs-lzjb.Tpo -c -o zfs-lzjb.o `test -f 'lzjb.c' || echo '$(srcdir)/'`lzjb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-lzjb.Tpo $(DEPDIR)/zfs-lzjb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lzjb.c' object='zfs-lzjb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-lzjb.o `test -f 'lzjb.c' || echo '$(srcdir)/'`lzjb.c

zfs-lzjb.obj: lzjb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-lzjb.obj -MD -MP -MF $(DEPDIR)/zfs-lzjb.Tpo -c -o zfs-lzjb.obj `if test -f 'lzjb.c'; then $(CYGPATH_W) 'lzjb.c'; else $(CYGPATH_W) '$(srcdir)/lzjb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-lzjb.Tpo $(DEPDIR)/zfs-lzjb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lzjb.c' object='zfs-lzjb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-lzjb.obj `if test -f 'lzjb.c'; then $(CYGPATH_W) 'lzjb.c'; else $(CYGPATH_W) '$(srcdir)/lzjb.c'; fi`

zfs-lz4.o: lz4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-lz4.o -MD -MP -MF $(DEPDIR)/zfs-lz4.Tpo -c -o zfs-lz4.o `test -f 'lz4.c' || echo '$(srcdir)/'`lz4.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-lz4.Tpo $(DEPDIR)/zfs-lz4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lz4.c' object='zfs-lz4.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-lz4.o `test -f 'lz4.c' || echo '$(srcdir)/'`lz4.c

zfs-lz4.obj: lz4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-lz4.obj -MD -MP -MF $(DEPDIR)/zfs-lz4.Tpo -c -o zfs-lz4.obj `if test -f 'lz4.c'; then $(CYGPATH_W) 'lz4.c'; else $(CYGPATH_W) '$(srcdir)/lz4.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-lz4.Tpo $(DEPDIR)/zfs-lz4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lz4.c' object='zfs-lz4.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-lz4.obj `if test -f 'lz4.c'; then $(CYGPATH_W) 'lz4.c'; else $(CYGPATH_W) '$(srcdir)/lz4.c'; fi`

zfs-metaslab.o: metaslab.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-metaslab.o -MD -MP -MF $(DEPDIR)/zfs-metaslab.Tpo -c -o zfs-metaslab.o `test -f 'metaslab.c' || echo '$(srcdir)/'`metaslab.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-metaslab.Tpo $(DEPDIR)/zfs-metaslab.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='metaslab.c' object='zfs-metaslab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-metaslab.o `test -f 'metaslab.c' || echo '$(srcdir)/'`metaslab.c

zfs-metaslab.obj: metaslab.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-metaslab.obj -MD -MP -MF $(DEPDIR)/zfs-metaslab.Tpo -c -o zfs-metaslab.obj `if test -f 'metaslab.c'; then $(CYGPATH_W) 'metaslab.c'; else $(CYGPATH_W) '$(srcdir)/metaslab.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-metaslab.Tpo $(DEPDIR)/zfs-metaslab.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='metaslab.c' object='zfs-metaslab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-metaslab.obj `if test -f 'metaslab.c'; then $(CYGPATH_W) 'metaslab.c'; else $(CYGPATH_W) '$(srcdir)/metaslab.c'; fi`

zfs-refcount.o: refcount.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-refcount.o -MD -MP -MF $(DEPDIR)/zfs-refcount.Tpo -c -o zfs-refcount.o `test -f 'refcount.c' || echo '$(srcdir)/'`refcount.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-refcount.Tpo $(DEPDIR)/zfs-refcount.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='refcount.c' object='zfs-refcount.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-refcount.o `test -f 'refcount.c' || echo '$(srcdir)/'`refcount.c

zfs-refcount.obj: refcount.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-refcount.obj -MD -MP -MF $(DEPDIR)/zfs-refcount.Tpo -c -o zfs-refcount.obj `if test -f 'refcount.c'; then $(CYGPATH_W) 'refcount.c'; else $(CYGPATH_W) '$(srcdir)/refcount.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-refcount.Tpo $(DEPDIR)/zfs-refcount.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='refcount.c' object='zfs-refcount.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-refcount.obj `if test -f 'refcount.c'; then $(CYGPATH_W) 'refcount.c'; else $(CYGPATH_W) '$(srcdir)/refcount.c'; fi`

zfs-rrwlock.o: rrwlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-rrwlock.o -MD -MP -MF $(DEPDIR)/zfs-rrwlock.Tpo -c -o zfs-rrwlock.o `test -f 'rrwlock.c' || echo '$(srcdir)/'`rrwlock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-rrwlock.Tpo $(DEPDIR)/zfs-rrwlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rrwlock.c' object='zfs-rrwlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-rrwlock.o `test -f 'rrwlock.c' || echo '$(srcdir)/'`rrwlock.c

zfs-rrwlock.obj: rrwlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-rrwlock.obj -MD -MP -MF $(DEPDIR)/zfs-rrwlock.Tpo -c -o zfs-rrwlock.obj `if test -f 'rrwlock.c'; then $(CYGPATH_W) 'rrwlock.c'; else $(CYGPATH_W) '$(srcdir)/rrwlock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-rrwlock.Tpo $(DEPDIR)/zfs-rrwlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rrwlock.c' object='zfs-rrwlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-rrwlock.obj `if test -f 'rrwlock.c'; then $(CYGPATH_W) 'rrwlock.c'; else $(CYGPATH_W) '$(srcdir)/rrwlock.c'; fi`

zfs-sa.o: sa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-sa.o -MD -MP -MF $(DEPDIR)/zfs-sa.Tpo -c -o zfs-sa.o `test -f 'sa.c' || echo '$(srcdir)/'`sa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-sa.Tpo $(DEPDIR)/zfs-sa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sa.c' object='zfs-sa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-sa.o `test -f 'sa.c' || echo '$(srcdir)/'`sa.c

zfs-sa.obj: sa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-sa.obj -MD -MP -MF $(DEPDIR)/zfs-sa.Tpo -c -o zfs-sa.obj `if test -f 'sa.c'; then $(CYGPATH_W) 'sa.c'; else $(CYGPATH_W) '$(srcdir)/sa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-sa.Tpo $(DEPDIR)/zfs-sa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sa.c' object='zfs-sa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-sa.obj `if test -f 'sa.c'; then $(CYGPATH_W) 'sa.c'; else $(CYGPATH_W) '$(srcdir)/sa.c'; fi`

zfs-sha256.o: sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-sha256.o -MD -MP -MF $(DEPDIR)/zfs-sha256.Tpo -c -o zfs-sha256.o `test -f 'sha256.c' || echo '$(srcdir)/'`sha256.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-sha256.Tpo $(DEPDIR)/zfs-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256.c' object='zfs-sha256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-sha256.o `test -f 'sha256.c' || echo '$(srcdir)/'`sha256.c

zfs-sha256.obj: sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-sha256.obj -MD -MP -MF $(DEPDIR)/zfs-sha256.Tpo -c -o zfs-sha256.obj `if test -f 'sha256.c'; then $(CYGPATH_W) 'sha256.c'; else $(CYGPATH_W) '$(srcdir)/sha256.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-sha256.Tpo $(DEPDIR)/zfs-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256.c' object='zfs-sha256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-sha256.obj `if test -f 'sha256.c'; then $(CYGPATH_W) 'sha256.c'; else $(CYGPATH_W) '$(srcdir)/sha256.c'; fi`

zfs-spa.o: spa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa.o -MD -MP -MF $(DEPDIR)/zfs-spa.Tpo -c -o zfs-spa.o `test -f 'spa.c' || echo '$(srcdir)/'`spa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa.Tpo $(DEPDIR)/zfs-spa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa.c' object='zfs-spa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa.o `test -f 'spa.c' || echo '$(srcdir)/'`spa.c

zfs-spa.obj: spa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa.obj -MD -MP -MF $(DEPDIR)/zfs-spa.Tpo -c -o zfs-spa.obj `if test -f 'spa.c'; then $(CYGPATH_W) 'spa.c'; else $(CYGPATH_W) '$(srcdir)/spa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa.Tpo $(DEPDIR)/zfs-spa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa.c' object='zfs-spa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa.obj `if test -f 'spa.c'; then $(CYGPATH_W) 'spa.c'; else $(CYGPATH_W) '$(srcdir)/spa.c'; fi`

zfs-spa_boot.o: spa_boot.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_boot.o -MD -MP -MF $(DEPDIR)/zfs-spa_boot.Tpo -c -o zfs-spa_boot.o `test -f 'spa_boot.c' || echo '$(srcdir)/'`spa_boot.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_boot.Tpo $(DEPDIR)/zfs-spa_boot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_boot.c' object='zfs-spa_boot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_boot.o `test -f 'spa_boot.c' || echo '$(srcdir)/'`spa_boot.c

zfs-spa_boot.obj: spa_boot.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_boot.obj -MD -MP -MF $(DEPDIR)/zfs-spa_boot.Tpo -c -o zfs-spa_boot.obj `if test -f 'spa_boot.c'; then $(CYGPATH_W) 'spa_boot.c'; else $(CYGPATH_W) '$(srcdir)/spa_boot.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_boot.Tpo $(DEPDIR)/zfs-spa_boot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_boot.c' object='zfs-spa_boot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_boot.obj `if test -f 'spa_boot.c'; then $(CYGPATH_W) 'spa_boot.c'; else $(CYGPATH_W) '$(srcdir)/spa_boot.c'; fi`

zfs-spa_config.o: spa_config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_config.o -MD -MP -MF $(DEPDIR)/zfs-spa_config.Tpo -c -o zfs-spa_config.o `test -f 'spa_config.c' || echo '$(srcdir)/'`spa_config.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_config.Tpo $(DEPDIR)/zfs-spa_config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_config.c' object='zfs-spa_config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_config.o `test -f 'spa_config.c' || echo '$(srcdir)/'`spa_config.c

zfs-spa_config.obj: spa_config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_config.obj -MD -MP -MF $(DEPDIR)/zfs-spa_config.Tpo -c -o zfs-spa_config.obj `if test -f 'spa_config.c'; then $(CYGPATH_W) 'spa_config.c'; else $(CYGPATH_W) '$(srcdir)/spa_config.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_config.Tpo $(DEPDIR)/zfs-spa_config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_config.c' object='zfs-spa_config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_config.obj `if test -f 'spa_config.c'; then $(CYGPATH_W) 'spa_config.c'; else $(CYGPATH_W) '$(srcdir)/spa_config.c'; fi`

zfs-spa_errlog.o: spa_errlog.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_errlog.o -MD -MP -MF $(DEPDIR)/zfs-spa_errlog.Tpo -c -o zfs-spa_errlog.o `test -f 'spa_errlog.c' || echo '$(srcdir)/'`spa_errlog.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_errlog.Tpo $(DEPDIR)/zfs-spa_errlog.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_errlog.c' object='zfs-spa_errlog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_errlog.o `test -f 'spa_errlog.c' || echo '$(srcdir)/'`spa_errlog.c

zfs-spa_errlog.obj: spa_errlog.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_errlog.obj -MD -MP -MF $(DEPDIR)/zfs-spa_errlog.Tpo -c -o zfs-spa_errlog.obj `if test -f 'spa_errlog.c'; then $(CYGPATH_W) 'spa_errlog.c'; else $(CYGPATH_W) '$(srcdir)/spa_errlog.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_errlog.Tpo $(DEPDIR)/zfs-spa_errlog.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_errlog.c' object='zfs-spa_errlog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_errlog.obj `if test -f 'spa_errlog.c'; then $(CYGPATH_W) 'spa_errlog.c'; else $(CYGPATH_W) '$(srcdir)/spa_errlog.c'; fi`

zfs-spa_history.o: spa_history.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_history.o -MD -MP -MF $(DEPDIR)/zfs-spa_history.Tpo -c -o zfs-spa_history.o `test -f 'spa_history.c' || echo '$(srcdir)/'`spa_history.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_history.Tpo $(DEPDIR)/zfs-spa_history.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_history.c' object='zfs-spa_history.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_history.o `test -f 'spa_history.c' || echo '$(srcdir)/'`spa_history.c

zfs-spa_history.obj: spa_history.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_history.obj -MD -MP -MF $(DEPDIR)/zfs-spa_history.Tpo -c -o zfs-spa_history.obj `if test -f 'spa_history.c'; then $(CYGPATH_W) 'spa_history.c'; else $(CYGPATH_W) '$(srcdir)/spa_history.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_history.Tpo $(DEPDIR)/zfs-spa_history.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_history.c' object='zfs-spa_history.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_history.obj `if test -f 'spa_history.c'; then $(CYGPATH_W) 'spa_history.c'; else $(CYGPATH_W) '$(srcdir)/spa_history.c'; fi`

zfs-spa_misc.o: spa_misc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_misc.o -MD -MP -MF $(DEPDIR)/zfs-spa_misc.Tpo -c -o zfs-spa_misc.o `test -f 'spa_misc.c' || echo '$(srcdir)/'`spa_misc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_misc.Tpo $(DEPDIR)/zfs-spa_misc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_misc.c' object='zfs-spa_misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_misc.o `test -f 'spa_misc.c' || echo '$(srcdir)/'`spa_misc.c

zfs-spa_misc.obj: spa_misc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-spa_misc.obj -MD -MP -MF $(DEPDIR)/zfs-spa_misc.Tpo -c -o zfs-spa_misc.obj `if test -f 'spa_misc.c'; then $(CYGPATH_W) 'spa_misc.c'; else $(CYGPATH_W) '$(srcdir)/spa_misc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-spa_misc.Tpo $(DEPDIR)/zfs-spa_misc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spa_misc.c' object='zfs-spa_misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-spa_misc.obj `if test -f 'spa_misc.c'; then $(CYGPATH_W) 'spa_misc.c'; else $(CYGPATH_W) '$(srcdir)/spa_misc.c'; fi`

zfs-space_map.o: space_map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-space_map.o -MD -MP -MF $(DEPDIR)/zfs-space_map.Tpo -c -o zfs-space_map.o `test -f 'space_map.c' || echo '$(srcdir)/'`space_map.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-space_map.Tpo $(DEPDIR)/zfs-space_map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='space_map.c' object='zfs-space_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-space_map.o `test -f 'space_map.c' || echo '$(srcdir)/'`space_map.c

zfs-space_map.obj: space_map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-space_map.obj -MD -MP -MF $(DEPDIR)/zfs-space_map.Tpo -c -o zfs-space_map.obj `if test -f 'space_map.c'; then $(CYGPATH_W) 'space_map.c'; else $(CYGPATH_W) '$(srcdir)/space_map.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-space_map.Tpo $(DEPDIR)/zfs-space_map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='space_map.c' object='zfs-space_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-space_map.obj `if test -f 'space_map.c'; then $(CYGPATH_W) 'space_map.c'; else $(CYGPATH_W) '$(srcdir)/space_map.c'; fi`

zfs-txg.o: txg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-txg.o -MD -MP -MF $(DEPDIR)/zfs-txg.Tpo -c -o zfs-txg.o `test -f 'txg.c' || echo '$(srcdir)/'`txg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-txg.Tpo $(DEPDIR)/zfs-txg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='txg.c' object='zfs-txg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-txg.o `test -f 'txg.c' || echo '$(srcdir)/'`txg.c

zfs-txg.obj: txg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-txg.obj -MD -MP -MF $(DEPDIR)/zfs-txg.Tpo -c -o zfs-txg.obj `if test -f 'txg.c'; then $(CYGPATH_W) 'txg.c'; else $(CYGPATH_W) '$(srcdir)/txg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-txg.Tpo $(DEPDIR)/zfs-txg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='txg.c' object='zfs-txg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-txg.obj `if test -f 'txg.c'; then $(CYGPATH_W) 'txg.c'; else $(CYGPATH_W) '$(srcdir)/txg.c'; fi`

zfs-uberblock.o: uberblock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-uberblock.o -MD -MP -MF $(DEPDIR)/zfs-uberblock.Tpo -c -o zfs-uberblock.o `test -f 'uberblock.c' || echo '$(srcdir)/'`uberblock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-uberblock.Tpo $(DEPDIR)/zfs-uberblock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='uberblock.c' object='zfs-uberblock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-uberblock.o `test -f 'uberblock.c' || echo '$(srcdir)/'`uberblock.c

zfs-uberblock.obj: uberblock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-uberblock.obj -MD -MP -MF $(DEPDIR)/zfs-uberblock.Tpo -c -o zfs-uberblock.obj `if test -f 'uberblock.c'; then $(CYGPATH_W) 'uberblock.c'; else $(CYGPATH_W) '$(srcdir)/uberblock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-uberblock.Tpo $(DEPDIR)/zfs-uberblock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='uberblock.c' object='zfs-uberblock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-uberblock.obj `if test -f 'uberblock.c'; then $(CYGPATH_W) 'uberblock.c'; else $(CYGPATH_W) '$(srcdir)/uberblock.c'; fi`

zfs-unique.o: unique.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-unique.o -MD -MP -MF $(DEPDIR)/zfs-unique.Tpo -c -o zfs-unique.o `test -f 'unique.c' || echo '$(srcdir)/'`unique.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-unique.Tpo $(DEPDIR)/zfs-unique.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unique.c' object='zfs-unique.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-unique.o `test -f 'unique.c' || echo '$(srcdir)/'`unique.c

zfs-unique.obj: unique.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-unique.obj -MD -MP -MF $(DEPDIR)/zfs-unique.Tpo -c -o zfs-unique.obj `if test -f 'unique.c'; then $(CYGPATH_W) 'unique.c'; else $(CYGPATH_W) '$(srcdir)/unique.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-unique.Tpo $(DEPDIR)/zfs-unique.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unique.c' object='zfs-unique.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-unique.obj `if test -f 'unique.c'; then $(CYGPATH_W) 'unique.c'; else $(CYGPATH_W) '$(srcdir)/unique.c'; fi`

zfs-vdev.o: vdev.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev.o -MD -MP -MF $(DEPDIR)/zfs-vdev.Tpo -c -o zfs-vdev.o `test -f 'vdev.c' || echo '$(srcdir)/'`vdev.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev.Tpo $(DEPDIR)/zfs-vdev.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev.c' object='zfs-vdev.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev.o `test -f 'vdev.c' || echo '$(srcdir)/'`vdev.c

zfs-vdev.obj: vdev.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev.obj -MD -MP -MF $(DEPDIR)/zfs-vdev.Tpo -c -o zfs-vdev.obj `if test -f 'vdev.c'; then $(CYGPATH_W) 'vdev.c'; else $(CYGPATH_W) '$(srcdir)/vdev.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev.Tpo $(DEPDIR)/zfs-vdev.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev.c' object='zfs-vdev.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev.obj `if test -f 'vdev.c'; then $(CYGPATH_W) 'vdev.c'; else $(CYGPATH_W) '$(srcdir)/vdev.c'; fi`

zfs-vdev_cache.o: vdev_cache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_cache.o -MD -MP -MF $(DEPDIR)/zfs-vdev_cache.Tpo -c -o zfs-vdev_cache.o `test -f 'vdev_cache.c' || echo '$(srcdir)/'`vdev_cache.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_cache.Tpo $(DEPDIR)/zfs-vdev_cache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_cache.c' object='zfs-vdev_cache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_cache.o `test -f 'vdev_cache.c' || echo '$(srcdir)/'`vdev_cache.c

zfs-vdev_cache.obj: vdev_cache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_cache.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_cache.Tpo -c -o zfs-vdev_cache.obj `if test -f 'vdev_cache.c'; then $(CYGPATH_W) 'vdev_cache.c'; else $(CYGPATH_W) '$(srcdir)/vdev_cache.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_cache.Tpo $(DEPDIR)/zfs-vdev_cache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_cache.c' object='zfs-vdev_cache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_cache.obj `if test -f 'vdev_cache.c'; then $(CYGPATH_W) 'vdev_cache.c'; else $(CYGPATH_W) '$(srcdir)/vdev_cache.c'; fi`

zfs-vdev_disk.o: vdev_disk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_disk.o -MD -MP -MF $(DEPDIR)/zfs-vdev_disk.Tpo -c -o zfs-vdev_disk.o `test -f 'vdev_disk.c' || echo '$(srcdir)/'`vdev_disk.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_disk.Tpo $(DEPDIR)/zfs-vdev_disk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_disk.c' object='zfs-vdev_disk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_disk.o `test -f 'vdev_disk.c' || echo '$(srcdir)/'`vdev_disk.c

zfs-vdev_disk.obj: vdev_disk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_disk.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_disk.Tpo -c -o zfs-vdev_disk.obj `if test -f 'vdev_disk.c'; then $(CYGPATH_W) 'vdev_disk.c'; else $(CYGPATH_W) '$(srcdir)/vdev_disk.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_disk.Tpo $(DEPDIR)/zfs-vdev_disk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_disk.c' object='zfs-vdev_disk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_disk.obj `if test -f 'vdev_disk.c'; then $(CYGPATH_W) 'vdev_disk.c'; else $(CYGPATH_W) '$(srcdir)/vdev_disk.c'; fi`

zfs-vdev_file.o: vdev_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_file.o -MD -MP -MF $(DEPDIR)/zfs-vdev_file.Tpo -c -o zfs-vdev_file.o `test -f 'vdev_file.c' || echo '$(srcdir)/'`vdev_file.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_file.Tpo $(DEPDIR)/zfs-vdev_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_file.c' object='zfs-vdev_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_file.o `test -f 'vdev_file.c' || echo '$(srcdir)/'`vdev_file.c

zfs-vdev_file.obj: vdev_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_file.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_file.Tpo -c -o zfs-vdev_file.obj `if test -f 'vdev_file.c'; then $(CYGPATH_W) 'vdev_file.c'; else $(CYGPATH_W) '$(srcdir)/vdev_file.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_file.Tpo $(DEPDIR)/zfs-vdev_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_file.c' object='zfs-vdev_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_file.obj `if test -f 'vdev_file.c'; then $(CYGPATH_W) 'vdev_file.c'; else $(CYGPATH_W) '$(srcdir)/vdev_file.c'; fi`

zfs-vdev_label.o: vdev_label.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_label.o -MD -MP -MF $(DEPDIR)/zfs-vdev_label.Tpo -c -o zfs-vdev_label.o `test -f 'vdev_label.c' || echo '$(srcdir)/'`vdev_label.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_label.Tpo $(DEPDIR)/zfs-vdev_label.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_label.c' object='zfs-vdev_label.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_label.o `test -f 'vdev_label.c' || echo '$(srcdir)/'`vdev_label.c

zfs-vdev_label.obj: vdev_label.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_label.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_label.Tpo -c -o zfs-vdev_label.obj `if test -f 'vdev_label.c'; then $(CYGPATH_W) 'vdev_label.c'; else $(CYGPATH_W) '$(srcdir)/vdev_label.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_label.Tpo $(DEPDIR)/zfs-vdev_label.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_label.c' object='zfs-vdev_label.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_label.obj `if test -f 'vdev_label.c'; then $(CYGPATH_W) 'vdev_label.c'; else $(CYGPATH_W) '$(srcdir)/vdev_label.c'; fi`

zfs-vdev_mirror.o: vdev_mirror.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_mirror.o -MD -MP -MF $(DEPDIR)/zfs-vdev_mirror.Tpo -c -o zfs-vdev_mirror.o `test -f 'vdev_mirror.c' || echo '$(srcdir)/'`vdev_mirror.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_mirror.Tpo $(DEPDIR)/zfs-vdev_mirror.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_mirror.c' object='zfs-vdev_mirror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_mirror.o `test -f 'vdev_mirror.c' || echo '$(srcdir)/'`vdev_mirror.c

zfs-vdev_mirror.obj: vdev_mirror.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_mirror.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_mirror.Tpo -c -o zfs-vdev_mirror.obj `if test -f 'vdev_mirror.c'; then $(CYGPATH_W) 'vdev_mirror.c'; else $(CYGPATH_W) '$(srcdir)/vdev_mirror.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_mirror.Tpo $(DEPDIR)/zfs-vdev_mirror.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_mirror.c' object='zfs-vdev_mirror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_mirror.obj `if test -f 'vdev_mirror.c'; then $(CYGPATH_W) 'vdev_mirror.c'; else $(CYGPATH_W) '$(srcdir)/vdev_mirror.c'; fi`

zfs-vdev_missing.o: vdev_missing.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_missing.o -MD -MP -MF $(DEPDIR)/zfs-vdev_missing.Tpo -c -o zfs-vdev_missing.o `test -f 'vdev_missing.c' || echo '$(srcdir)/'`vdev_missing.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_missing.Tpo $(DEPDIR)/zfs-vdev_missing.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_missing.c' object='zfs-vdev_missing.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_missing.o `test -f 'vdev_missing.c' || echo '$(srcdir)/'`vdev_missing.c

zfs-vdev_missing.obj: vdev_missing.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_missing.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_missing.Tpo -c -o zfs-vdev_missing.obj `if test -f 'vdev_missing.c'; then $(CYGPATH_W) 'vdev_missing.c'; else $(CYGPATH_W) '$(srcdir)/vdev_missing.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_missing.Tpo $(DEPDIR)/zfs-vdev_missing.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_missing.c' object='zfs-vdev_missing.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_missing.obj `if test -f 'vdev_missing.c'; then $(CYGPATH_W) 'vdev_missing.c'; else $(CYGPATH_W) '$(srcdir)/vdev_missing.c'; fi`

zfs-vdev_queue.o: vdev_queue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_queue.o -MD -MP -MF $(DEPDIR)/zfs-vdev_queue.Tpo -c -o zfs-vdev_queue.o `test -f 'vdev_queue.c' || echo '$(srcdir)/'`vdev_queue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_queue.Tpo $(DEPDIR)/zfs-vdev_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_queue.c' object='zfs-vdev_queue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_queue.o `test -f 'vdev_queue.c' || echo '$(srcdir)/'`vdev_queue.c

zfs-vdev_queue.obj: vdev_queue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_queue.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_queue.Tpo -c -o zfs-vdev_queue.obj `if test -f 'vdev_queue.c'; then $(CYGPATH_W) 'vdev_queue.c'; else $(CYGPATH_W) '$(srcdir)/vdev_queue.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_queue.Tpo $(DEPDIR)/zfs-vdev_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_queue.c' object='zfs-vdev_queue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_queue.obj `if test -f 'vdev_queue.c'; then $(CYGPATH_W) 'vdev_queue.c'; else $(CYGPATH_W) '$(srcdir)/vdev_queue.c'; fi`

zfs-vdev_raidz.o: vdev_raidz.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_raidz.o -MD -MP -MF $(DEPDIR)/zfs-vdev_raidz.Tpo -c -o zfs-vdev_raidz.o `test -f 'vdev_raidz.c' || echo '$(srcdir)/'`vdev_raidz.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_raidz.Tpo $(DEPDIR)/zfs-vdev_raidz.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_raidz.c' object='zfs-vdev_raidz.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_raidz.o `test -f 'vdev_raidz.c' || echo '$(srcdir)/'`vdev_raidz.c

zfs-vdev_raidz.obj: vdev_raidz.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_raidz.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_raidz.Tpo -c -o zfs-vdev_raidz.obj `if test -f 'vdev_raidz.c'; then $(CYGPATH_W) 'vdev_raidz.c'; else $(CYGPATH_W) '$(srcdir)/vdev_raidz.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_raidz.Tpo $(DEPDIR)/zfs-vdev_raidz.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_raidz.c' object='zfs-vdev_raidz.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_raidz.obj `if test -f 'vdev_raidz.c'; then $(CYGPATH_W) 'vdev_raidz.c'; else $(CYGPATH_W) '$(srcdir)/vdev_raidz.c'; fi`

zfs-vdev_root.o: vdev_root.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_root.o -MD -MP -MF $(DEPDIR)/zfs-vdev_root.Tpo -c -o zfs-vdev_root.o `test -f 'vdev_root.c' || echo '$(srcdir)/'`vdev_root.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_root.Tpo $(DEPDIR)/zfs-vdev_root.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_root.c' object='zfs-vdev_root.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_root.o `test -f 'vdev_root.c' || echo '$(srcdir)/'`vdev_root.c

zfs-vdev_root.obj: vdev_root.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-vdev_root.obj -MD -MP -MF $(DEPDIR)/zfs-vdev_root.Tpo -c -o zfs-vdev_root.obj `if test -f 'vdev_root.c'; then $(CYGPATH_W) 'vdev_root.c'; else $(CYGPATH_W) '$(srcdir)/vdev_root.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-vdev_root.Tpo $(DEPDIR)/zfs-vdev_root.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='vdev_root.c' object='zfs-vdev_root.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-vdev_root.obj `if test -f 'vdev_root.c'; then $(CYGPATH_W) 'vdev_root.c'; else $(CYGPATH_W) '$(srcdir)/vdev_root.c'; fi`

zfs-zap.o: zap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap.o -MD -MP -MF $(DEPDIR)/zfs-zap.Tpo -c -o zfs-zap.o `test -f 'zap.c' || echo '$(srcdir)/'`zap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap.Tpo $(DEPDIR)/zfs-zap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap.c' object='zfs-zap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap.o `test -f 'zap.c' || echo '$(srcdir)/'`zap.c

zfs-zap.obj: zap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap.obj -MD -MP -MF $(DEPDIR)/zfs-zap.Tpo -c -o zfs-zap.obj `if test -f 'zap.c'; then $(CYGPATH_W) 'zap.c'; else $(CYGPATH_W) '$(srcdir)/zap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap.Tpo $(DEPDIR)/zfs-zap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap.c' object='zfs-zap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap.obj `if test -f 'zap.c'; then $(CYGPATH_W) 'zap.c'; else $(CYGPATH_W) '$(srcdir)/zap.c'; fi`

zfs-zap_leaf.o: zap_leaf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap_leaf.o -MD -MP -MF $(DEPDIR)/zfs-zap_leaf.Tpo -c -o zfs-zap_leaf.o `test -f 'zap_leaf.c' || echo '$(srcdir)/'`zap_leaf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap_leaf.Tpo $(DEPDIR)/zfs-zap_leaf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap_leaf.c' object='zfs-zap_leaf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap_leaf.o `test -f 'zap_leaf.c' || echo '$(srcdir)/'`zap_leaf.c

zfs-zap_leaf.obj: zap_leaf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap_leaf.obj -MD -MP -MF $(DEPDIR)/zfs-zap_leaf.Tpo -c -o zfs-zap_leaf.obj `if test -f 'zap_leaf.c'; then $(CYGPATH_W) 'zap_leaf.c'; else $(CYGPATH_W) '$(srcdir)/zap_leaf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap_leaf.Tpo $(DEPDIR)/zfs-zap_leaf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap_leaf.c' object='zfs-zap_leaf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap_leaf.obj `if test -f 'zap_leaf.c'; then $(CYGPATH_W) 'zap_leaf.c'; else $(CYGPATH_W) '$(srcdir)/zap_leaf.c'; fi`

zfs-zap_micro.o: zap_micro.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap_micro.o -MD -MP -MF $(DEPDIR)/zfs-zap_micro.Tpo -c -o zfs-zap_micro.o `test -f 'zap_micro.c' || echo '$(srcdir)/'`zap_micro.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap_micro.Tpo $(DEPDIR)/zfs-zap_micro.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap_micro.c' object='zfs-zap_micro.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap_micro.o `test -f 'zap_micro.c' || echo '$(srcdir)/'`zap_micro.c

zfs-zap_micro.obj: zap_micro.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zap_micro.obj -MD -MP -MF $(DEPDIR)/zfs-zap_micro.Tpo -c -o zfs-zap_micro.obj `if test -f 'zap_micro.c'; then $(CYGPATH_W) 'zap_micro.c'; else $(CYGPATH_W) '$(srcdir)/zap_micro.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zap_micro.Tpo $(DEPDIR)/zfs-zap_micro.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zap_micro.c' object='zfs-zap_micro.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zap_micro.obj `if test -f 'zap_micro.c'; then $(CYGPATH_W) 'zap_micro.c'; else $(CYGPATH_W) '$(srcdir)/zap_micro.c'; fi`

zfs-zfeature.o: zfeature.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfeature.o -MD -MP -MF $(DEPDIR)/zfs-zfeature.Tpo -c -o zfs-zfeature.o `test -f 'zfeature.c' || echo '$(srcdir)/'`zfeature.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfeature.Tpo $(DEPDIR)/zfs-zfeature.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfeature.c' object='zfs-zfeature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfeature.o `test -f 'zfeature.c' || echo '$(srcdir)/'`zfeature.c

zfs-zfeature.obj: zfeature.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfeature.obj -MD -MP -MF $(DEPDIR)/zfs-zfeature.Tpo -c -o zfs-zfeature.obj `if test -f 'zfeature.c'; then $(CYGPATH_W) 'zfeature.c'; else $(CYGPATH_W) '$(srcdir)/zfeature.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfeature.Tpo $(DEPDIR)/zfs-zfeature.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfeature.c' object='zfs-zfeature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfeature.obj `if test -f 'zfeature.c'; then $(CYGPATH_W) 'zfeature.c'; else $(CYGPATH_W) '$(srcdir)/zfeature.c'; fi`

zfs-zfeature_common.o: zfeature_common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfeature_common.o -MD -MP -MF $(DEPDIR)/zfs-zfeature_common.Tpo -c -o zfs-zfeature_common.o `test -f 'zfeature_common.c' || echo '$(srcdir)/'`zfeature_common.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfeature_common.Tpo $(DEPDIR)/zfs-zfeature_common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfeature_common.c' object='zfs-zfeature_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfeature_common.o `test -f 'zfeature_common.c' || echo '$(srcdir)/'`zfeature_common.c

zfs-zfeature_common.obj: zfeature_common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfeature_common.obj -MD -MP -MF $(DEPDIR)/zfs-zfeature_common.Tpo -c -o zfs-zfeature_common.obj `if test -f 'zfeature_common.c'; then $(CYGPATH_W) 'zfeature_common.c'; else $(CYGPATH_W) '$(srcdir)/zfeature_common.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfeature_common.Tpo $(DEPDIR)/zfs-zfeature_common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfeature_common.c' object='zfs-zfeature_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfeature_common.obj `if test -f 'zfeature_common.c'; then $(CYGPATH_W) 'zfeature_common.c'; else $(CYGPATH_W) '$(srcdir)/zfeature_common.c'; fi`

zfs-zfs_acl.o: zfs_acl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_acl.o -MD -MP -MF $(DEPDIR)/zfs-zfs_acl.Tpo -c -o zfs-zfs_acl.o `test -f 'zfs_acl.c' || echo '$(srcdir)/'`zfs_acl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_acl.Tpo $(DEPDIR)/zfs-zfs_acl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_acl.c' object='zfs-zfs_acl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_acl.o `test -f 'zfs_acl.c' || echo '$(srcdir)/'`zfs_acl.c

zfs-zfs_acl.obj: zfs_acl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_acl.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_acl.Tpo -c -o zfs-zfs_acl.obj `if test -f 'zfs_acl.c'; then $(CYGPATH_W) 'zfs_acl.c'; else $(CYGPATH_W) '$(srcdir)/zfs_acl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_acl.Tpo $(DEPDIR)/zfs-zfs_acl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_acl.c' object='zfs-zfs_acl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_acl.obj `if test -f 'zfs_acl.c'; then $(CYGPATH_W) 'zfs_acl.c'; else $(CYGPATH_W) '$(srcdir)/zfs_acl.c'; fi`

zfs-zfs_byteswap.o: zfs_byteswap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_byteswap.o -MD -MP -MF $(DEPDIR)/zfs-zfs_byteswap.Tpo -c -o zfs-zfs_byteswap.o `test -f 'zfs_byteswap.c' || echo '$(srcdir)/'`zfs_byteswap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_byteswap.Tpo $(DEPDIR)/zfs-zfs_byteswap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_byteswap.c' object='zfs-zfs_byteswap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_byteswap.o `test -f 'zfs_byteswap.c' || echo '$(srcdir)/'`zfs_byteswap.c

zfs-zfs_byteswap.obj: zfs_byteswap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_byteswap.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_byteswap.Tpo -c -o zfs-zfs_byteswap.obj `if test -f 'zfs_byteswap.c'; then $(CYGPATH_W) 'zfs_byteswap.c'; else $(CYGPATH_W) '$(srcdir)/zfs_byteswap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_byteswap.Tpo $(DEPDIR)/zfs-zfs_byteswap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_byteswap.c' object='zfs-zfs_byteswap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_byteswap.obj `if test -f 'zfs_byteswap.c'; then $(CYGPATH_W) 'zfs_byteswap.c'; else $(CYGPATH_W) '$(srcdir)/zfs_byteswap.c'; fi`

zfs-zfs_ctldir.o: zfs_ctldir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_ctldir.o -MD -MP -MF $(DEPDIR)/zfs-zfs_ctldir.Tpo -c -o zfs-zfs_ctldir.o `test -f 'zfs_ctldir.c' || echo '$(srcdir)/'`zfs_ctldir.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_ctldir.Tpo $(DEPDIR)/zfs-zfs_ctldir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_ctldir.c' object='zfs-zfs_ctldir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_ctldir.o `test -f 'zfs_ctldir.c' || echo '$(srcdir)/'`zfs_ctldir.c

zfs-zfs_ctldir.obj: zfs_ctldir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_ctldir.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_ctldir.Tpo -c -o zfs-zfs_ctldir.obj `if test -f 'zfs_ctldir.c'; then $(CYGPATH_W) 'zfs_ctldir.c'; else $(CYGPATH_W) '$(srcdir)/zfs_ctldir.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_ctldir.Tpo $(DEPDIR)/zfs-zfs_ctldir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_ctldir.c' object='zfs-zfs_ctldir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_ctldir.obj `if test -f 'zfs_ctldir.c'; then $(CYGPATH_W) 'zfs_ctldir.c'; else $(CYGPATH_W) '$(srcdir)/zfs_ctldir.c'; fi`

zfs-zfs_debug.o: zfs_debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_debug.o -MD -MP -MF $(DEPDIR)/zfs-zfs_debug.Tpo -c -o zfs-zfs_debug.o `test -f 'zfs_debug.c' || echo '$(srcdir)/'`zfs_debug.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_debug.Tpo $(DEPDIR)/zfs-zfs_debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_debug.c' object='zfs-zfs_debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_debug.o `test -f 'zfs_debug.c' || echo '$(srcdir)/'`zfs_debug.c

zfs-zfs_debug.obj: zfs_debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_debug.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_debug.Tpo -c -o zfs-zfs_debug.obj `if test -f 'zfs_debug.c'; then $(CYGPATH_W) 'zfs_debug.c'; else $(CYGPATH_W) '$(srcdir)/zfs_debug.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_debug.Tpo $(DEPDIR)/zfs-zfs_debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_debug.c' object='zfs-zfs_debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_debug.obj `if test -f 'zfs_debug.c'; then $(CYGPATH_W) 'zfs_debug.c'; else $(CYGPATH_W) '$(srcdir)/zfs_debug.c'; fi`

zfs-zfs_dir.o: zfs_dir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_dir.o -MD -MP -MF $(DEPDIR)/zfs-zfs_dir.Tpo -c -o zfs-zfs_dir.o `test -f 'zfs_dir.c' || echo '$(srcdir)/'`zfs_dir.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_dir.Tpo $(DEPDIR)/zfs-zfs_dir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_dir.c' object='zfs-zfs_dir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_dir.o `test -f 'zfs_dir.c' || echo '$(srcdir)/'`zfs_dir.c

zfs-zfs_dir.obj: zfs_dir.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_dir.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_dir.Tpo -c -o zfs-zfs_dir.obj `if test -f 'zfs_dir.c'; then $(CYGPATH_W) 'zfs_dir.c'; else $(CYGPATH_W) '$(srcdir)/zfs_dir.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_dir.Tpo $(DEPDIR)/zfs-zfs_dir.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_dir.c' object='zfs-zfs_dir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_dir.obj `if test -f 'zfs_dir.c'; then $(CYGPATH_W) 'zfs_dir.c'; else $(CYGPATH_W) '$(srcdir)/zfs_dir.c'; fi`

zfs-zfs_fm.o: zfs_fm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fm.o -MD -MP -MF $(DEPDIR)/zfs-zfs_fm.Tpo -c -o zfs-zfs_fm.o `test -f 'zfs_fm.c' || echo '$(srcdir)/'`zfs_fm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fm.Tpo $(DEPDIR)/zfs-zfs_fm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_fm.c' object='zfs-zfs_fm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fm.o `test -f 'zfs_fm.c' || echo '$(srcdir)/'`zfs_fm.c

zfs-zfs_fm.obj: zfs_fm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fm.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_fm.Tpo -c -o zfs-zfs_fm.obj `if test -f 'zfs_fm.c'; then $(CYGPATH_W) 'zfs_fm.c'; else $(CYGPATH_W) '$(srcdir)/zfs_fm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fm.Tpo $(DEPDIR)/zfs-zfs_fm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_fm.c' object='zfs-zfs_fm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fm.obj `if test -f 'zfs_fm.c'; then $(CYGPATH_W) 'zfs_fm.c'; else $(CYGPATH_W) '$(srcdir)/zfs_fm.c'; fi`

zfs-zfs_fuid.o: zfs_fuid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fuid.o -MD -MP -MF $(DEPDIR)/zfs-zfs_fuid.Tpo -c -o zfs-zfs_fuid.o `test -f 'zfs_fuid.c' || echo '$(srcdir)/'`zfs_fuid.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fuid.Tpo $(DEPDIR)/zfs-zfs_fuid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_fuid.c' object='zfs-zfs_fuid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fuid.o `test -f 'zfs_fuid.c' || echo '$(srcdir)/'`zfs_fuid.c

zfs-zfs_fuid.obj: zfs_fuid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fuid.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_fuid.Tpo -c -o zfs-zfs_fuid.obj `if test -f 'zfs_fuid.c'; then $(CYGPATH_W) 'zfs_fuid.c'; else $(CYGPATH_W) '$(srcdir)/zfs_fuid.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fuid.Tpo $(DEPDIR)/zfs-zfs_fuid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_fuid.c' object='zfs-zfs_fuid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fuid.obj `if test -f 'zfs_fuid.c'; then $(CYGPATH_W) 'zfs_fuid.c'; else $(CYGPATH_W) '$(srcdir)/zfs_fuid.c'; fi`

zfs-zfs_ioctl.o: zfs_ioctl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_ioctl.o -MD -MP -MF $(DEPDIR)/zfs-zfs_ioctl.Tpo -c -o zfs-zfs_ioctl.o `test -f 'zfs_ioctl.c' || echo '$(srcdir)/'`zfs_ioctl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_ioctl.Tpo $(DEPDIR)/zfs-zfs_ioctl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_ioctl.c' object='zfs-zfs_ioctl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_ioctl.o `test -f 'zfs_ioctl.c' || echo '$(srcdir)/'`zfs_ioctl.c

zfs-zfs_ioctl.obj: zfs_ioctl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_ioctl.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_ioctl.Tpo -c -o zfs-zfs_ioctl.obj `if test -f 'zfs_ioctl.c'; then $(CYGPATH_W) 'zfs_ioctl.c'; else $(CYGPATH_W) '$(srcdir)/zfs_ioctl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_ioctl.Tpo $(DEPDIR)/zfs-zfs_ioctl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_ioctl.c' object='zfs-zfs_ioctl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_ioctl.obj `if test -f 'zfs_ioctl.c'; then $(CYGPATH_W) 'zfs_ioctl.c'; else $(CYGPATH_W) '$(srcdir)/zfs_ioctl.c'; fi`

zfs-zfs_log.o: zfs_log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_log.o -MD -MP -MF $(DEPDIR)/zfs-zfs_log.Tpo -c -o zfs-zfs_log.o `test -f 'zfs_log.c' || echo '$(srcdir)/'`zfs_log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_log.Tpo $(DEPDIR)/zfs-zfs_log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_log.c' object='zfs-zfs_log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_log.o `test -f 'zfs_log.c' || echo '$(srcdir)/'`zfs_log.c

zfs-zfs_log.obj: zfs_log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_log.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_log.Tpo -c -o zfs-zfs_log.obj `if test -f 'zfs_log.c'; then $(CYGPATH_W) 'zfs_log.c'; else $(CYGPATH_W) '$(srcdir)/zfs_log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_log.Tpo $(DEPDIR)/zfs-zfs_log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_log.c' object='zfs-zfs_log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_log.obj `if test -f 'zfs_log.c'; then $(CYGPATH_W) 'zfs_log.c'; else $(CYGPATH_W) '$(srcdir)/zfs_log.c'; fi`

zfs-zfs_onexit.o: zfs_onexit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_onexit.o -MD -MP -MF $(DEPDIR)/zfs-zfs_onexit.Tpo -c -o zfs-zfs_onexit.o `test -f 'zfs_onexit.c' || echo '$(srcdir)/'`zfs_onexit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_onexit.Tpo $(DEPDIR)/zfs-zfs_onexit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_onexit.c' object='zfs-zfs_onexit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_onexit.o `test -f 'zfs_onexit.c' || echo '$(srcdir)/'`zfs_onexit.c

zfs-zfs_onexit.obj: zfs_onexit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_onexit.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_onexit.Tpo -c -o zfs-zfs_onexit.obj `if test -f 'zfs_onexit.c'; then $(CYGPATH_W) 'zfs_onexit.c'; else $(CYGPATH_W) '$(srcdir)/zfs_onexit.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_onexit.Tpo $(DEPDIR)/zfs-zfs_onexit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_onexit.c' object='zfs-zfs_onexit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_onexit.obj `if test -f 'zfs_onexit.c'; then $(CYGPATH_W) 'zfs_onexit.c'; else $(CYGPATH_W) '$(srcdir)/zfs_onexit.c'; fi`

zfs-zfs_replay.o: zfs_replay.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_replay.o -MD -MP -MF $(DEPDIR)/zfs-zfs_replay.Tpo -c -o zfs-zfs_replay.o `test -f 'zfs_replay.c' || echo '$(srcdir)/'`zfs_replay.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_replay.Tpo $(DEPDIR)/zfs-zfs_replay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_replay.c' object='zfs-zfs_replay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_replay.o `test -f 'zfs_replay.c' || echo '$(srcdir)/'`zfs_replay.c

zfs-zfs_replay.obj: zfs_replay.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_replay.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_replay.Tpo -c -o zfs-zfs_replay.obj `if test -f 'zfs_replay.c'; then $(CYGPATH_W) 'zfs_replay.c'; else $(CYGPATH_W) '$(srcdir)/zfs_replay.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_replay.Tpo $(DEPDIR)/zfs-zfs_replay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_replay.c' object='zfs-zfs_replay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_replay.obj `if test -f 'zfs_replay.c'; then $(CYGPATH_W) 'zfs_replay.c'; else $(CYGPATH_W) '$(srcdir)/zfs_replay.c'; fi`

zfs-zfs_rlock.o: zfs_rlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_rlock.o -MD -MP -MF $(DEPDIR)/zfs-zfs_rlock.Tpo -c -o zfs-zfs_rlock.o `test -f 'zfs_rlock.c' || echo '$(srcdir)/'`zfs_rlock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_rlock.Tpo $(DEPDIR)/zfs-zfs_rlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_rlock.c' object='zfs-zfs_rlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_rlock.o `test -f 'zfs_rlock.c' || echo '$(srcdir)/'`zfs_rlock.c

zfs-zfs_rlock.obj: zfs_rlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_rlock.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_rlock.Tpo -c -o zfs-zfs_rlock.obj `if test -f 'zfs_rlock.c'; then $(CYGPATH_W) 'zfs_rlock.c'; else $(CYGPATH_W) '$(srcdir)/zfs_rlock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_rlock.Tpo $(DEPDIR)/zfs-zfs_rlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_rlock.c' object='zfs-zfs_rlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_rlock.obj `if test -f 'zfs_rlock.c'; then $(CYGPATH_W) 'zfs_rlock.c'; else $(CYGPATH_W) '$(srcdir)/zfs_rlock.c'; fi`

zfs-zfs_sa.o: zfs_sa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_sa.o -MD -MP -MF $(DEPDIR)/zfs-zfs_sa.Tpo -c -o zfs-zfs_sa.o `test -f 'zfs_sa.c' || echo '$(srcdir)/'`zfs_sa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_sa.Tpo $(DEPDIR)/zfs-zfs_sa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_sa.c' object='zfs-zfs_sa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_sa.o `test -f 'zfs_sa.c' || echo '$(srcdir)/'`zfs_sa.c

zfs-zfs_sa.obj: zfs_sa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_sa.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_sa.Tpo -c -o zfs-zfs_sa.obj `if test -f 'zfs_sa.c'; then $(CYGPATH_W) 'zfs_sa.c'; else $(CYGPATH_W) '$(srcdir)/zfs_sa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_sa.Tpo $(DEPDIR)/zfs-zfs_sa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_sa.c' object='zfs-zfs_sa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_sa.obj `if test -f 'zfs_sa.c'; then $(CYGPATH_W) 'zfs_sa.c'; else $(CYGPATH_W) '$(srcdir)/zfs_sa.c'; fi`

zfs-zfs_vfsops.o: zfs_vfsops.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vfsops.o -MD -MP -MF $(DEPDIR)/zfs-zfs_vfsops.Tpo -c -o zfs-zfs_vfsops.o `test -f 'zfs_vfsops.c' || echo '$(srcdir)/'`zfs_vfsops.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vfsops.Tpo $(DEPDIR)/zfs-zfs_vfsops.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vfsops.c' object='zfs-zfs_vfsops.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vfsops.o `test -f 'zfs_vfsops.c' || echo '$(srcdir)/'`zfs_vfsops.c

zfs-zfs_vfsops.obj: zfs_vfsops.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vfsops.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_vfsops.Tpo -c -o zfs-zfs_vfsops.obj `if test -f 'zfs_vfsops.c'; then $(CYGPATH_W) 'zfs_vfsops.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vfsops.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vfsops.Tpo $(DEPDIR)/zfs-zfs_vfsops.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vfsops.c' object='zfs-zfs_vfsops.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vfsops.obj `if test -f 'zfs_vfsops.c'; then $(CYGPATH_W) 'zfs_vfsops.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vfsops.c'; fi`

zfs-zfs_vnops.o: zfs_vnops.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops.o -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops.Tpo -c -o zfs-zfs_vnops.o `test -f 'zfs_vnops.c' || echo '$(srcdir)/'`zfs_vnops.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops.Tpo $(DEPDIR)/zfs-zfs_vnops.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops.c' object='zfs-zfs_vnops.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops.o `test -f 'zfs_vnops.c' || echo '$(srcdir)/'`zfs_vnops.c

zfs-zfs_vnops.obj: zfs_vnops.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops.Tpo -c -o zfs-zfs_vnops.obj `if test -f 'zfs_vnops.c'; then $(CYGPATH_W) 'zfs_vnops.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops.Tpo $(DEPDIR)/zfs-zfs_vnops.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops.c' object='zfs-zfs_vnops.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops.obj `if test -f 'zfs_vnops.c'; then $(CYGPATH_W) 'zfs_vnops.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops.c'; fi`

zfs-zfs_vnops_osx.o: zfs_vnops_osx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops_osx.o -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops_osx.Tpo -c -o zfs-zfs_vnops_osx.o `test -f 'zfs_vnops_osx.c' || echo '$(srcdir)/'`zfs_vnops_osx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops_osx.Tpo $(DEPDIR)/zfs-zfs_vnops_osx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops_osx.c' object='zfs-zfs_vnops_osx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops_osx.o `test -f 'zfs_vnops_osx.c' || echo '$(srcdir)/'`zfs_vnops_osx.c

zfs-zfs_vnops_osx.obj: zfs_vnops_osx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops_osx.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops_osx.Tpo -c -o zfs-zfs_vnops_osx.obj `if test -f 'zfs_vnops_osx.c'; then $(CYGPATH_W) 'zfs_vnops_osx.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops_osx.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops_osx.Tpo $(DEPDIR)/zfs-zfs_vnops_osx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops_osx.c' object='zfs-zfs_vnops_osx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops_osx.obj `if test -f 'zfs_vnops_osx.c'; then $(CYGPATH_W) 'zfs_vnops_osx.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops_osx.c'; fi`

zfs-zfs_vnops_osx_lib.o: zfs_vnops_osx_lib.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops_osx_lib.o -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops_osx_lib.Tpo -c -o zfs-zfs_vnops_osx_lib.o `test -f 'zfs_vnops_osx_lib.c' || echo '$(srcdir)/'`zfs_vnops_osx_lib.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops_osx_lib.Tpo $(DEPDIR)/zfs-zfs_vnops_osx_lib.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops_osx_lib.c' object='zfs-zfs_vnops_osx_lib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops_osx_lib.o `test -f 'zfs_vnops_osx_lib.c' || echo '$(srcdir)/'`zfs_vnops_osx_lib.c

zfs-zfs_vnops_osx_lib.obj: zfs_vnops_osx_lib.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_vnops_osx_lib.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_vnops_osx_lib.Tpo -c -o zfs-zfs_vnops_osx_lib.obj `if test -f 'zfs_vnops_osx_lib.c'; then $(CYGPATH_W) 'zfs_vnops_osx_lib.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops_osx_lib.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_vnops_osx_lib.Tpo $(DEPDIR)/zfs-zfs_vnops_osx_lib.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_vnops_osx_lib.c' object='zfs-zfs_vnops_osx_lib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_vnops_osx_lib.obj `if test -f 'zfs_vnops_osx_lib.c'; then $(CYGPATH_W) 'zfs_vnops_osx_lib.c'; else $(CYGPATH_W) '$(srcdir)/zfs_vnops_osx_lib.c'; fi`

zfs-zfs_znode.o: zfs_znode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_znode.o -MD -MP -MF $(DEPDIR)/zfs-zfs_znode.Tpo -c -o zfs-zfs_znode.o `test -f 'zfs_znode.c' || echo '$(srcdir)/'`zfs_znode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_znode.Tpo $(DEPDIR)/zfs-zfs_znode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_znode.c' object='zfs-zfs_znode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_znode.o `test -f 'zfs_znode.c' || echo '$(srcdir)/'`zfs_znode.c

zfs-zfs_znode.obj: zfs_znode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_znode.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_znode.Tpo -c -o zfs-zfs_znode.obj `if test -f 'zfs_znode.c'; then $(CYGPATH_W) 'zfs_znode.c'; else $(CYGPATH_W) '$(srcdir)/zfs_znode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_znode.Tpo $(DEPDIR)/zfs-zfs_znode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zfs_znode.c' object='zfs-zfs_znode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_znode.obj `if test -f 'zfs_znode.c'; then $(CYGPATH_W) 'zfs_znode.c'; else $(CYGPATH_W) '$(srcdir)/zfs_znode.c'; fi`

zfs-zil.o: zil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zil.o -MD -MP -MF $(DEPDIR)/zfs-zil.Tpo -c -o zfs-zil.o `test -f 'zil.c' || echo '$(srcdir)/'`zil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zil.Tpo $(DEPDIR)/zfs-zil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zil.c' object='zfs-zil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zil.o `test -f 'zil.c' || echo '$(srcdir)/'`zil.c

zfs-zil.obj: zil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zil.obj -MD -MP -MF $(DEPDIR)/zfs-zil.Tpo -c -o zfs-zil.obj `if test -f 'zil.c'; then $(CYGPATH_W) 'zil.c'; else $(CYGPATH_W) '$(srcdir)/zil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zil.Tpo $(DEPDIR)/zfs-zil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zil.c' object='zfs-zil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zil.obj `if test -f 'zil.c'; then $(CYGPATH_W) 'zil.c'; else $(CYGPATH_W) '$(srcdir)/zil.c'; fi`

zfs-zio.o: zio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio.o -MD -MP -MF $(DEPDIR)/zfs-zio.Tpo -c -o zfs-zio.o `test -f 'zio.c' || echo '$(srcdir)/'`zio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio.Tpo $(DEPDIR)/zfs-zio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio.c' object='zfs-zio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio.o `test -f 'zio.c' || echo '$(srcdir)/'`zio.c

zfs-zio.obj: zio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio.obj -MD -MP -MF $(DEPDIR)/zfs-zio.Tpo -c -o zfs-zio.obj `if test -f 'zio.c'; then $(CYGPATH_W) 'zio.c'; else $(CYGPATH_W) '$(srcdir)/zio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio.Tpo $(DEPDIR)/zfs-zio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio.c' object='zfs-zio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio.obj `if test -f 'zio.c'; then $(CYGPATH_W) 'zio.c'; else $(CYGPATH_W) '$(srcdir)/zio.c'; fi`

zfs-zio_checksum.o: zio_checksum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_checksum.o -MD -MP -MF $(DEPDIR)/zfs-zio_checksum.Tpo -c -o zfs-zio_checksum.o `test -f 'zio_checksum.c' || echo '$(srcdir)/'`zio_checksum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_checksum.Tpo $(DEPDIR)/zfs-zio_checksum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_checksum.c' object='zfs-zio_checksum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_checksum.o `test -f 'zio_checksum.c' || echo '$(srcdir)/'`zio_checksum.c

zfs-zio_checksum.obj: zio_checksum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_checksum.obj -MD -MP -MF $(DEPDIR)/zfs-zio_checksum.Tpo -c -o zfs-zio_checksum.obj `if test -f 'zio_checksum.c'; then $(CYGPATH_W) 'zio_checksum.c'; else $(CYGPATH_W) '$(srcdir)/zio_checksum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_checksum.Tpo $(DEPDIR)/zfs-zio_checksum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_checksum.c' object='zfs-zio_checksum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_checksum.obj `if test -f 'zio_checksum.c'; then $(CYGPATH_W) 'zio_checksum.c'; else $(CYGPATH_W) '$(srcdir)/zio_checksum.c'; fi`

zfs-zio_compress.o: zio_compress.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_compress.o -MD -MP -MF $(DEPDIR)/zfs-zio_compress.Tpo -c -o zfs-zio_compress.o `test -f 'zio_compress.c' || echo '$(srcdir)/'`zio_compress.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_compress.Tpo $(DEPDIR)/zfs-zio_compress.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_compress.c' object='zfs-zio_compress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_compress.o `test -f 'zio_compress.c' || echo '$(srcdir)/'`zio_compress.c

zfs-zio_compress.obj: zio_compress.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_compress.obj -MD -MP -MF $(DEPDIR)/zfs-zio_compress.Tpo -c -o zfs-zio_compress.obj `if test -f 'zio_compress.c'; then $(CYGPATH_W) 'zio_compress.c'; else $(CYGPATH_W) '$(srcdir)/zio_compress.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_compress.Tpo $(DEPDIR)/zfs-zio_compress.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_compress.c' object='zfs-zio_compress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_compress.obj `if test -f 'zio_compress.c'; then $(CYGPATH_W) 'zio_compress.c'; else $(CYGPATH_W) '$(srcdir)/zio_compress.c'; fi`

zfs-zio_inject.o: zio_inject.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_inject.o -MD -MP -MF $(DEPDIR)/zfs-zio_inject.Tpo -c -o zfs-zio_inject.o `test -f 'zio_inject.c' || echo '$(srcdir)/'`zio_inject.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_inject.Tpo $(DEPDIR)/zfs-zio_inject.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_inject.c' object='zfs-zio_inject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_inject.o `test -f 'zio_inject.c' || echo '$(srcdir)/'`zio_inject.c

zfs-zio_inject.obj: zio_inject.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zio_inject.obj -MD -MP -MF $(DEPDIR)/zfs-zio_inject.Tpo -c -o zfs-zio_inject.obj `if test -f 'zio_inject.c'; then $(CYGPATH_W) 'zio_inject.c'; else $(CYGPATH_W) '$(srcdir)/zio_inject.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zio_inject.Tpo $(DEPDIR)/zfs-zio_inject.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zio_inject.c' object='zfs-zio_inject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zio_inject.obj `if test -f 'zio_inject.c'; then $(CYGPATH_W) 'zio_inject.c'; else $(CYGPATH_W) '$(srcdir)/zio_inject.c'; fi`

zfs-zle.o: zle.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zle.o -MD -MP -MF $(DEPDIR)/zfs-zle.Tpo -c -o zfs-zle.o `test -f 'zle.c' || echo '$(srcdir)/'`zle.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zle.Tpo $(DEPDIR)/zfs-zle.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zle.c' object='zfs-zle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zle.o `test -f 'zle.c' || echo '$(srcdir)/'`zle.c

zfs-zle.obj: zle.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zle.obj -MD -MP -MF $(DEPDIR)/zfs-zle.Tpo -c -o zfs-zle.obj `if test -f 'zle.c'; then $(CYGPATH_W) 'zle.c'; else $(CYGPATH_W) '$(srcdir)/zle.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zle.Tpo $(DEPDIR)/zfs-zle.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zle.c' object='zfs-zle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zle.obj `if test -f 'zle.c'; then $(CYGPATH_W) 'zle.c'; else $(CYGPATH_W) '$(srcdir)/zle.c'; fi`

zfs-zrlock.o: zrlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zrlock.o -MD -MP -MF $(DEPDIR)/zfs-zrlock.Tpo -c -o zfs-zrlock.o `test -f 'zrlock.c' || echo '$(srcdir)/'`zrlock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zrlock.Tpo $(DEPDIR)/zfs-zrlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zrlock.c' object='zfs-zrlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zrlock.o `test -f 'zrlock.c' || echo '$(srcdir)/'`zrlock.c

zfs-zrlock.obj: zrlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zrlock.obj -MD -MP -MF $(DEPDIR)/zfs-zrlock.Tpo -c -o zfs-zrlock.obj `if test -f 'zrlock.c'; then $(CYGPATH_W) 'zrlock.c'; else $(CYGPATH_W) '$(srcdir)/zrlock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zrlock.Tpo $(DEPDIR)/zfs-zrlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zrlock.c' object='zfs-zrlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zrlock.obj `if test -f 'zrlock.c'; then $(CYGPATH_W) 'zrlock.c'; else $(CYGPATH_W) '$(srcdir)/zrlock.c'; fi`

zfs-zvol.o: zvol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zvol.o -MD -MP -MF $(DEPDIR)/zfs-zvol.Tpo -c -o zfs-zvol.o `test -f 'zvol.c' || echo '$(srcdir)/'`zvol.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zvol.Tpo $(DEPDIR)/zfs-zvol.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zvol.c' object='zfs-zvol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zvol.o `test -f 'zvol.c' || echo '$(srcdir)/'`zvol.c

zfs-zvol.obj: zvol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zvol.obj -MD -MP -MF $(DEPDIR)/zfs-zvol.Tpo -c -o zfs-zvol.obj `if test -f 'zvol.c'; then $(CYGPATH_W) 'zvol.c'; else $(CYGPATH_W) '$(srcdir)/zvol.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zvol.Tpo $(DEPDIR)/zfs-zvol.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='zvol.c' object='zfs-zvol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zvol.obj `if test -f 'zvol.c'; then $(CYGPATH_W) 'zvol.c'; else $(CYGPATH_W) '$(srcdir)/zvol.c'; fi`

zfs-avl.o: ../avl/avl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-avl.o -MD -MP -MF $(DEPDIR)/zfs-avl.Tpo -c -o zfs-avl.o `test -f '../avl/avl.c' || echo '$(srcdir)/'`../avl/avl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-avl.Tpo $(DEPDIR)/zfs-avl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../avl/avl.c' object='zfs-avl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-avl.o `test -f '../avl/avl.c' || echo '$(srcdir)/'`../avl/avl.c

zfs-avl.obj: ../avl/avl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-avl.obj -MD -MP -MF $(DEPDIR)/zfs-avl.Tpo -c -o zfs-avl.obj `if test -f '../avl/avl.c'; then $(CYGPATH_W) '../avl/avl.c'; else $(CYGPATH_W) '$(srcdir)/../avl/avl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-avl.Tpo $(DEPDIR)/zfs-avl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../avl/avl.c' object='zfs-avl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-avl.obj `if test -f '../avl/avl.c'; then $(CYGPATH_W) '../avl/avl.c'; else $(CYGPATH_W) '$(srcdir)/../avl/avl.c'; fi`

zfs-fnvpair.o: ../nvpair/fnvpair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-fnvpair.o -MD -MP -MF $(DEPDIR)/zfs-fnvpair.Tpo -c -o zfs-fnvpair.o `test -f '../nvpair/fnvpair.c' || echo '$(srcdir)/'`../nvpair/fnvpair.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-fnvpair.Tpo $(DEPDIR)/zfs-fnvpair.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/fnvpair.c' object='zfs-fnvpair.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-fnvpair.o `test -f '../nvpair/fnvpair.c' || echo '$(srcdir)/'`../nvpair/fnvpair.c

zfs-fnvpair.obj: ../nvpair/fnvpair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-fnvpair.obj -MD -MP -MF $(DEPDIR)/zfs-fnvpair.Tpo -c -o zfs-fnvpair.obj `if test -f '../nvpair/fnvpair.c'; then $(CYGPATH_W) '../nvpair/fnvpair.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/fnvpair.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-fnvpair.Tpo $(DEPDIR)/zfs-fnvpair.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/fnvpair.c' object='zfs-fnvpair.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-fnvpair.obj `if test -f '../nvpair/fnvpair.c'; then $(CYGPATH_W) '../nvpair/fnvpair.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/fnvpair.c'; fi`

zfs-nvpair.o: ../nvpair/nvpair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair.o -MD -MP -MF $(DEPDIR)/zfs-nvpair.Tpo -c -o zfs-nvpair.o `test -f '../nvpair/nvpair.c' || echo '$(srcdir)/'`../nvpair/nvpair.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair.Tpo $(DEPDIR)/zfs-nvpair.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair.c' object='zfs-nvpair.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair.o `test -f '../nvpair/nvpair.c' || echo '$(srcdir)/'`../nvpair/nvpair.c

zfs-nvpair.obj: ../nvpair/nvpair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair.obj -MD -MP -MF $(DEPDIR)/zfs-nvpair.Tpo -c -o zfs-nvpair.obj `if test -f '../nvpair/nvpair.c'; then $(CYGPATH_W) '../nvpair/nvpair.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair.Tpo $(DEPDIR)/zfs-nvpair.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair.c' object='zfs-nvpair.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair.obj `if test -f '../nvpair/nvpair.c'; then $(CYGPATH_W) '../nvpair/nvpair.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair.c'; fi`

zfs-nvpair_alloc_fixed.o: ../nvpair/nvpair_alloc_fixed.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair_alloc_fixed.o -MD -MP -MF $(DEPDIR)/zfs-nvpair_alloc_fixed.Tpo -c -o zfs-nvpair_alloc_fixed.o `test -f '../nvpair/nvpair_alloc_fixed.c' || echo '$(srcdir)/'`../nvpair/nvpair_alloc_fixed.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair_alloc_fixed.Tpo $(DEPDIR)/zfs-nvpair_alloc_fixed.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair_alloc_fixed.c' object='zfs-nvpair_alloc_fixed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair_alloc_fixed.o `test -f '../nvpair/nvpair_alloc_fixed.c' || echo '$(srcdir)/'`../nvpair/nvpair_alloc_fixed.c

zfs-nvpair_alloc_fixed.obj: ../nvpair/nvpair_alloc_fixed.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair_alloc_fixed.obj -MD -MP -MF $(DEPDIR)/zfs-nvpair_alloc_fixed.Tpo -c -o zfs-nvpair_alloc_fixed.obj `if test -f '../nvpair/nvpair_alloc_fixed.c'; then $(CYGPATH_W) '../nvpair/nvpair_alloc_fixed.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair_alloc_fixed.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair_alloc_fixed.Tpo $(DEPDIR)/zfs-nvpair_alloc_fixed.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair_alloc_fixed.c' object='zfs-nvpair_alloc_fixed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair_alloc_fixed.obj `if test -f '../nvpair/nvpair_alloc_fixed.c'; then $(CYGPATH_W) '../nvpair/nvpair_alloc_fixed.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair_alloc_fixed.c'; fi`

zfs-nvpair_alloc_spl.o: ../nvpair/nvpair_alloc_spl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair_alloc_spl.o -MD -MP -MF $(DEPDIR)/zfs-nvpair_alloc_spl.Tpo -c -o zfs-nvpair_alloc_spl.o `test -f '../nvpair/nvpair_alloc_spl.c' || echo '$(srcdir)/'`../nvpair/nvpair_alloc_spl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair_alloc_spl.Tpo $(DEPDIR)/zfs-nvpair_alloc_spl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair_alloc_spl.c' object='zfs-nvpair_alloc_spl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair_alloc_spl.o `test -f '../nvpair/nvpair_alloc_spl.c' || echo '$(srcdir)/'`../nvpair/nvpair_alloc_spl.c

zfs-nvpair_alloc_spl.obj: ../nvpair/nvpair_alloc_spl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-nvpair_alloc_spl.obj -MD -MP -MF $(DEPDIR)/zfs-nvpair_alloc_spl.Tpo -c -o zfs-nvpair_alloc_spl.obj `if test -f '../nvpair/nvpair_alloc_spl.c'; then $(CYGPATH_W) '../nvpair/nvpair_alloc_spl.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair_alloc_spl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-nvpair_alloc_spl.Tpo $(DEPDIR)/zfs-nvpair_alloc_spl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../nvpair/nvpair_alloc_spl.c' object='zfs-nvpair_alloc_spl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-nvpair_alloc_spl.obj `if test -f '../nvpair/nvpair_alloc_spl.c'; then $(CYGPATH_W) '../nvpair/nvpair_alloc_spl.c'; else $(CYGPATH_W) '$(srcdir)/../nvpair/nvpair_alloc_spl.c'; fi`

zfs-u8_textprep.o: ../unicode/u8_textprep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-u8_textprep.o -MD -MP -MF $(DEPDIR)/zfs-u8_textprep.Tpo -c -o zfs-u8_textprep.o `test -f '../unicode/u8_textprep.c' || echo '$(srcdir)/'`../unicode/u8_textprep.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-u8_textprep.Tpo $(DEPDIR)/zfs-u8_textprep.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../unicode/u8_textprep.c' object='zfs-u8_textprep.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-u8_textprep.o `test -f '../unicode/u8_textprep.c' || echo '$(srcdir)/'`../unicode/u8_textprep.c

zfs-u8_textprep.obj: ../unicode/u8_textprep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-u8_textprep.obj -MD -MP -MF $(DEPDIR)/zfs-u8_textprep.Tpo -c -o zfs-u8_textprep.obj `if test -f '../unicode/u8_textprep.c'; then $(CYGPATH_W) '../unicode/u8_textprep.c'; else $(CYGPATH_W) '$(srcdir)/../unicode/u8_textprep.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-u8_textprep.Tpo $(DEPDIR)/zfs-u8_textprep.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../unicode/u8_textprep.c' object='zfs-u8_textprep.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-u8_textprep.obj `if test -f '../unicode/u8_textprep.c'; then $(CYGPATH_W) '../unicode/u8_textprep.c'; else $(CYGPATH_W) '$(srcdir)/../unicode/u8_textprep.c'; fi`

zfs-uconv.o: ../unicode/uconv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-uconv.o -MD -MP -MF $(DEPDIR)/zfs-uconv.Tpo -c -o zfs-uconv.o `test -f '../unicode/uconv.c' || echo '$(srcdir)/'`../unicode/uconv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-uconv.Tpo $(DEPDIR)/zfs-uconv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../unicode/uconv.c' object='zfs-uconv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-uconv.o `test -f '../unicode/uconv.c' || echo '$(srcdir)/'`../unicode/uconv.c

zfs-uconv.obj: ../unicode/uconv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-uconv.obj -MD -MP -MF $(DEPDIR)/zfs-uconv.Tpo -c -o zfs-uconv.obj `if test -f '../unicode/uconv.c'; then $(CYGPATH_W) '../unicode/uconv.c'; else $(CYGPATH_W) '$(srcdir)/../unicode/uconv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-uconv.Tpo $(DEPDIR)/zfs-uconv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../unicode/uconv.c' object='zfs-uconv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-uconv.obj `if test -f '../unicode/uconv.c'; then $(CYGPATH_W) '../unicode/uconv.c'; else $(CYGPATH_W) '$(srcdir)/../unicode/uconv.c'; fi`

zfs-zfs_comutil.o: ../zcommon/zfs_comutil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_comutil.o -MD -MP -MF $(DEPDIR)/zfs-zfs_comutil.Tpo -c -o zfs-zfs_comutil.o `test -f '../zcommon/zfs_comutil.c' || echo '$(srcdir)/'`../zcommon/zfs_comutil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_comutil.Tpo $(DEPDIR)/zfs-zfs_comutil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_comutil.c' object='zfs-zfs_comutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_comutil.o `test -f '../zcommon/zfs_comutil.c' || echo '$(srcdir)/'`../zcommon/zfs_comutil.c

zfs-zfs_comutil.obj: ../zcommon/zfs_comutil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_comutil.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_comutil.Tpo -c -o zfs-zfs_comutil.obj `if test -f '../zcommon/zfs_comutil.c'; then $(CYGPATH_W) '../zcommon/zfs_comutil.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_comutil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_comutil.Tpo $(DEPDIR)/zfs-zfs_comutil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_comutil.c' object='zfs-zfs_comutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_comutil.obj `if test -f '../zcommon/zfs_comutil.c'; then $(CYGPATH_W) '../zcommon/zfs_comutil.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_comutil.c'; fi`

zfs-zfs_deleg.o: ../zcommon/zfs_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_deleg.o -MD -MP -MF $(DEPDIR)/zfs-zfs_deleg.Tpo -c -o zfs-zfs_deleg.o `test -f '../zcommon/zfs_deleg.c' || echo '$(srcdir)/'`../zcommon/zfs_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_deleg.Tpo $(DEPDIR)/zfs-zfs_deleg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_deleg.c' object='zfs-zfs_deleg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_deleg.o `test -f '../zcommon/zfs_deleg.c' || echo '$(srcdir)/'`../zcommon/zfs_deleg.c

zfs-zfs_deleg.obj: ../zcommon/zfs_deleg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_deleg.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_deleg.Tpo -c -o zfs-zfs_deleg.obj `if test -f '../zcommon/zfs_deleg.c'; then $(CYGPATH_W) '../zcommon/zfs_deleg.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_deleg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_deleg.Tpo $(DEPDIR)/zfs-zfs_deleg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_deleg.c' object='zfs-zfs_deleg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_deleg.obj `if test -f '../zcommon/zfs_deleg.c'; then $(CYGPATH_W) '../zcommon/zfs_deleg.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_deleg.c'; fi`

zfs-zfs_fletcher.o: ../zcommon/zfs_fletcher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fletcher.o -MD -MP -MF $(DEPDIR)/zfs-zfs_fletcher.Tpo -c -o zfs-zfs_fletcher.o `test -f '../zcommon/zfs_fletcher.c' || echo '$(srcdir)/'`../zcommon/zfs_fletcher.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fletcher.Tpo $(DEPDIR)/zfs-zfs_fletcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_fletcher.c' object='zfs-zfs_fletcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fletcher.o `test -f '../zcommon/zfs_fletcher.c' || echo '$(srcdir)/'`../zcommon/zfs_fletcher.c

zfs-zfs_fletcher.obj: ../zcommon/zfs_fletcher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_fletcher.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_fletcher.Tpo -c -o zfs-zfs_fletcher.obj `if test -f '../zcommon/zfs_fletcher.c'; then $(CYGPATH_W) '../zcommon/zfs_fletcher.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_fletcher.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_fletcher.Tpo $(DEPDIR)/zfs-zfs_fletcher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_fletcher.c' object='zfs-zfs_fletcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_fletcher.obj `if test -f '../zcommon/zfs_fletcher.c'; then $(CYGPATH_W) '../zcommon/zfs_fletcher.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_fletcher.c'; fi`

zfs-zfs_namecheck.o: ../zcommon/zfs_namecheck.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_namecheck.o -MD -MP -MF $(DEPDIR)/zfs-zfs_namecheck.Tpo -c -o zfs-zfs_namecheck.o `test -f '../zcommon/zfs_namecheck.c' || echo '$(srcdir)/'`../zcommon/zfs_namecheck.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_namecheck.Tpo $(DEPDIR)/zfs-zfs_namecheck.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_namecheck.c' object='zfs-zfs_namecheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_namecheck.o `test -f '../zcommon/zfs_namecheck.c' || echo '$(srcdir)/'`../zcommon/zfs_namecheck.c

zfs-zfs_namecheck.obj: ../zcommon/zfs_namecheck.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_namecheck.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_namecheck.Tpo -c -o zfs-zfs_namecheck.obj `if test -f '../zcommon/zfs_namecheck.c'; then $(CYGPATH_W) '../zcommon/zfs_namecheck.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_namecheck.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_namecheck.Tpo $(DEPDIR)/zfs-zfs_namecheck.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_namecheck.c' object='zfs-zfs_namecheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_namecheck.obj `if test -f '../zcommon/zfs_namecheck.c'; then $(CYGPATH_W) '../zcommon/zfs_namecheck.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_namecheck.c'; fi`

zfs-zfs_prop.o: ../zcommon/zfs_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_prop.o -MD -MP -MF $(DEPDIR)/zfs-zfs_prop.Tpo -c -o zfs-zfs_prop.o `test -f '../zcommon/zfs_prop.c' || echo '$(srcdir)/'`../zcommon/zfs_prop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_prop.Tpo $(DEPDIR)/zfs-zfs_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_prop.c' object='zfs-zfs_prop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_prop.o `test -f '../zcommon/zfs_prop.c' || echo '$(srcdir)/'`../zcommon/zfs_prop.c

zfs-zfs_prop.obj: ../zcommon/zfs_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zfs_prop.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_prop.Tpo -c -o zfs-zfs_prop.obj `if test -f '../zcommon/zfs_prop.c'; then $(CYGPATH_W) '../zcommon/zfs_prop.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_prop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_prop.Tpo $(DEPDIR)/zfs-zfs_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zfs_prop.c' object='zfs-zfs_prop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zfs_prop.obj `if test -f '../zcommon/zfs_prop.c'; then $(CYGPATH_W) '../zcommon/zfs_prop.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zfs_prop.c'; fi`

zfs-zpool_prop.o: ../zcommon/zpool_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zpool_prop.o -MD -MP -MF $(DEPDIR)/zfs-zpool_prop.Tpo -c -o zfs-zpool_prop.o `test -f '../zcommon/zpool_prop.c' || echo '$(srcdir)/'`../zcommon/zpool_prop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zpool_prop.Tpo $(DEPDIR)/zfs-zpool_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zpool_prop.c' object='zfs-zpool_prop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zpool_prop.o `test -f '../zcommon/zpool_prop.c' || echo '$(srcdir)/'`../zcommon/zpool_prop.c

zfs-zpool_prop.obj: ../zcommon/zpool_prop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zpool_prop.obj -MD -MP -MF $(DEPDIR)/zfs-zpool_prop.Tpo -c -o zfs-zpool_prop.obj `if test -f '../zcommon/zpool_prop.c'; then $(CYGPATH_W) '../zcommon/zpool_prop.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zpool_prop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zpool_prop.Tpo $(DEPDIR)/zfs-zpool_prop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zpool_prop.c' object='zfs-zpool_prop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zpool_prop.obj `if test -f '../zcommon/zpool_prop.c'; then $(CYGPATH_W) '../zcommon/zpool_prop.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zpool_prop.c'; fi`

zfs-zprop_common.o: ../zcommon/zprop_common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zprop_common.o -MD -MP -MF $(DEPDIR)/zfs-zprop_common.Tpo -c -o zfs-zprop_common.o `test -f '../zcommon/zprop_common.c' || echo '$(srcdir)/'`../zcommon/zprop_common.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zprop_common.Tpo $(DEPDIR)/zfs-zprop_common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zprop_common.c' object='zfs-zprop_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zprop_common.o `test -f '../zcommon/zprop_common.c' || echo '$(srcdir)/'`../zcommon/zprop_common.c

zfs-zprop_common.obj: ../zcommon/zprop_common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zfs-zprop_common.obj -MD -MP -MF $(DEPDIR)/zfs-zprop_common.Tpo -c -o zfs-zprop_common.obj `if test -f '../zcommon/zprop_common.c'; then $(CYGPATH_W) '../zcommon/zprop_common.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zprop_common.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zprop_common.Tpo $(DEPDIR)/zfs-zprop_common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../zcommon/zprop_common.c' object='zfs-zprop_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zfs-zprop_common.obj `if test -f '../zcommon/zprop_common.c'; then $(CYGPATH_W) '../zcommon/zprop_common.c'; else $(CYGPATH_W) '$(srcdir)/../zcommon/zprop_common.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

zfs-zfs_osx.o: zfs_osx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -MT zfs-zfs_osx.o -MD -MP -MF $(DEPDIR)/zfs-zfs_osx.Tpo -c -o zfs-zfs_osx.o `test -f 'zfs_osx.cpp' || echo '$(srcdir)/'`zfs_osx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_osx.Tpo $(DEPDIR)/zfs-zfs_osx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zfs_osx.cpp' object='zfs-zfs_osx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -c -o zfs-zfs_osx.o `test -f 'zfs_osx.cpp' || echo '$(srcdir)/'`zfs_osx.cpp

zfs-zfs_osx.obj: zfs_osx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -MT zfs-zfs_osx.obj -MD -MP -MF $(DEPDIR)/zfs-zfs_osx.Tpo -c -o zfs-zfs_osx.obj `if test -f 'zfs_osx.cpp'; then $(CYGPATH_W) 'zfs_osx.cpp'; else $(CYGPATH_W) '$(srcdir)/zfs_osx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zfs_osx.Tpo $(DEPDIR)/zfs-zfs_osx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zfs_osx.cpp' object='zfs-zfs_osx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -c -o zfs-zfs_osx.obj `if test -f 'zfs_osx.cpp'; then $(CYGPATH_W) 'zfs_osx.cpp'; else $(CYGPATH_W) '$(srcdir)/zfs_osx.cpp'; fi`

zfs-zvolIO.o: zvolIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -MT zfs-zvolIO.o -MD -MP -MF $(DEPDIR)/zfs-zvolIO.Tpo -c -o zfs-zvolIO.o `test -f 'zvolIO.cpp' || echo '$(srcdir)/'`zvolIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zvolIO.Tpo $(DEPDIR)/zfs-zvolIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zvolIO.cpp' object='zfs-zvolIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -c -o zfs-zvolIO.o `test -f 'zvolIO.cpp' || echo '$(srcdir)/'`zvolIO.cpp

zfs-zvolIO.obj: zvolIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -MT zfs-zvolIO.obj -MD -MP -MF $(DEPDIR)/zfs-zvolIO.Tpo -c -o zfs-zvolIO.obj `if test -f 'zvolIO.cpp'; then $(CYGPATH_W) 'zvolIO.cpp'; else $(CYGPATH_W) '$(srcdir)/zvolIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zfs-zvolIO.Tpo $(DEPDIR)/zfs-zvolIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zvolIO.cpp' object='zfs-zvolIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zfs_CPPFLAGS) $(CPPFLAGS) $(zfs_CXXFLAGS) $(CXXFLAGS) -c -o zfs-zvolIO.obj `if test -f 'zvolIO.cpp'; then $(CYGPATH_W) 'zvolIO.cpp'; else $(CYGPATH_W) '$(srcdir)/zvolIO.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS


zfs.kext$(EXEEXT): zfs $(PLIST_STRING) $(INFO_PLIST)
	@echo
	rm -rf zfs.kext
	mkdir -p zfs.kext/Contents/Resources/English.lproj zfs.kext/Contents/MacOS
	cp -f $(INFO_PLIST) zfs.kext/Contents/
	cp -f $(PLIST_STRING) zfs.kext/Contents/Resources/English.lproj/
	cp -f zfs zfs.kext/Contents/MacOS/
	mkdir -p zfs.kext/Contents/Plugins/KernelExports.kext/
	cp -f KernelExports/KernelExports zfs.kext/Contents/Plugins/KernelExports.kext/
	cp -f KernelExports/Info.plist zfs.kext/Contents/Plugins/KernelExports.kext/
	cp -f KernelExports/version.plist zfs.kext/Contents/Plugins/KernelExports.kext/
	kextlibs -undef-symbols -e -r $(SPL_KMODDIR) -xml zfs.kext/ || echo Ignoring errors
	mkdir -p KernelExports.kext/Contents/MacOS
	cp -f KernelExports/KernelExports KernelExports.kext/Contents/MacOS/
	cp -f KernelExports/Info.plist KernelExports.kext/Contents/

# Show more information if there are linking problems.
debug-kext-linking:
	kextlibs -all-symbols -e -r $(SPL_KMODDIR) -xml zfs.kext/

install-exec-local: zfs.kext
	rm -rf /System/Library/Extensions/zfs.kext
	rsync -r zfs.kext/ /System/Library/Extensions/zfs.kext/
	chown -R root:wheel /System/Library/Extensions/zfs.kext/
	@echo
	@echo "To load module: kextload -v /System/Library/Extensions/zfs.kext"
	@echo "To uninstall module: rm -rf /System/Library/Extensions/zfs.kext"
	@echo

clean:
	rm -rf zfs.kext/
	rm -f *.o *.lo zfs

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
